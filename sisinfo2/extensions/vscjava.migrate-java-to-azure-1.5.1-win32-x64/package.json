{
	"name": "migrate-java-to-azure",
	"publisher": "vscjava",
	"displayName": "GitHub Copilot app modernization",
	"description": "Upgrade and migrate your Java applications to Azure",
	"icon": "assets/logo.png",
	"repository": {
		"url": "https://github.com/microsoft/vscode-app-mod-pack"
	},
	"version": "1.5.1",
	"aiKey": "0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",
	"engines": {
		"vscode": "^1.101.0",
		"node": ">=18"
	},
	"categories": [
		"AI",
		"Chat"
	],
	"tags": [
		"java",
		"azure",
		"java on azure",
		"maven",
		"gradle",
		"app modernization",
		"app mod",
		"upgrade",
		"migrate",
		"migration"
	],
	"activationEvents": [
		"onView:azureJavaMigrationExplorer",
		"onLanguage:java",
		"workspaceContains:pom.xml",
		"workspaceContains:**/pom.xml",
		"workspaceContains:**/*.java"
	],
	"contributes": {
		"icons": {
			"icon-import": {
				"description": "Add import icon in task tree view",
				"default": {
					"fontPath": "./assets/media/AppModernizationJava.woff",
					"fontCharacter": "\\E000"
				}
			}
		},
		"customEditors": [
			{
				"viewType": "migrate.java.formulaEditor",
				"displayName": "Task Editor",
				"selector": [
					{
						"filenamePattern": "*.formula"
					}
				]
			}
		],
		"mcpServerDefinitionProviders": [
			{
				"id": "app-modernization-for-java",
				"label": "GitHub Copilot app modernization"
			},
			{
				"id": "app-modernization-for-java-deploy",
				"label": "GitHub Copilot app modernization for Java - Deployment"
			}
		],
		"languageModelTools": [
			{
				"name": "appmod-install-appcat",
				"tags": [
					"migration",
					"assessment"
				],
				"toolReferenceName": "appmod-install-appcat",
				"displayName": "Install AppCAT",
				"userDescription": "Installs the AppCAT CLI for Java migration assessment.",
				"modelDescription": "Installs the AppCAT CLI for Java only if it is missing or outdated during the prerequisite check phase of assessment. After successful installation, proceed to initialize the Java application assessment process to check prerequisites. This tool is strictly limited to the pre-migration assessment preparation phase and must not be invoked during code migration workflows.",
				"canBeReferencedInPrompt": true,
				"when": "config.appmod.enableMcpServer != true",
				"inputSchema": {
					"type": "object",
					"properties": {}
				}
			},
			{
				"name": "appmod-precheck-assessment",
				"tags": [
					"migration",
					"assessment"
				],
				"toolReferenceName": "appmod-precheck-assessment",
				"displayName": "Precheck Assessment",
				"userDescription": "Performs prerequisites verification and AppCAT CLI version checks for Java application assessment.",
				"modelDescription": "Performs prerequisites verification and AppCAT CLI version checks to initialize the Java application assessment process. Generates an assessment configuration for review. This tool is strictly limited to the pre-migration assessment phase and must not be invoked during code migration workflows.",
				"canBeReferencedInPrompt": true,
				"when": "config.appmod.enableMcpServer != true",
				"inputSchema": {
					"type": "object",
					"properties": {
						"workspacePath": {
							"type": "string",
							"description": "The workspace path of the Java project to assess"
						}
					},
					"required": [
						"workspacePath"
					]
				}
			},
			{
				"name": "appmod-run-assessment",
				"tags": [
					"migration",
					"assessment"
				],
				"toolReferenceName": "appmod-run-assessment",
				"displayName": "Run Assessment",
				"icon": "$(run)",
				"userDescription": "Executes assessment for the Java application to evaluate migration readiness.",
				"modelDescription": "Executes the AppCAT CLI for Java to assess the Java application. This tool is strictly limited to the pre-migration assessment phase and must not be invoked during code migration workflows.",
				"canBeReferencedInPrompt": true,
				"when": "config.appmod.enableMcpServer != true",
				"inputSchema": {
					"type": "object",
					"properties": {
						"workspacePath": {
							"type": "string",
							"description": "The workspace path of the Java project to assess"
						},
						"appCatConfig": {
							"type": "object",
							"description": "AppCAT configuration for assessment",
							"properties": {
								"target": {
									"type": "array",
									"items": {
										"type": "string"
									},
									"description": "Target technologies. Valid values: azure-aks, azure-appservice, azure-container-apps, cloud-readiness, linux, openjdk11, openjdk17, openjdk21. Default is the target of AppCAT configuration in the Configuration Summary."
								},
								"mode": {
									"type": "string",
									"enum": [
										"source-only",
										"full"
									],
									"description": "Analysis mode: source-only (analyze source code only) or full (analyze source code and list dependencies). Default is the mode of AppCAT configuration in the Configuration Summary."
								}
							}
						}
					},
					"required": [
						"workspacePath",
						"appCatConfig"
					]
				}
			},
			{
				"name": "appmod-get-vscode-config",
				"tags": [
					"migration",
					"configuration"
				],
				"toolReferenceName": "appmod-get-vscode-config",
				"displayName": "Get extension configuration",
				"userDescription": "Get configuration values for GitHub Copilot app modernization extension.",
				"modelDescription": "This tool retrieves extension configuration settings from VS Code. Use this tool when you need to check configuration values for the GitHub Copilot app modernization extension.",
				"canBeReferencedInPrompt": true,
				"inputSchema": {
					"type": "object",
					"properties": {
						"configName": {
							"type": "string",
							"description": "Name of the configuration setting to retrieve.",
							"examples": [
								"enableVerboseLogging",
								"uncommittedChangesAction"
							]
						}
					},
					"required": [
						"configName"
					]
				}
			},
			{
				"name": "appmod-preview-markdown",
				"tags": [
					"migration",
					"preview_markdown"
				],
				"toolReferenceName": "appmod-preview-markdown",
				"displayName": "Preview Markdown",
				"modelDescription": "This tool opens a preview of the given Markdown file.",
				"canBeReferencedInPrompt": true,
				"inputSchema": {
					"type": "object",
					"properties": {
						"markdownFile": {
							"type": "string",
							"description": "The absolute path to the Markdown file to preview and pinned to editor.",
							"examples": [
								"/absolute/path/to/README.md"
							]
						}
					}
				}
			},
			{
				"name": "appmod-validate-cve",
				"tags": [
					"migration",
					"cve_validate"
				],
				"toolReferenceName": "appmod-validate-cve",
				"displayName": "Check the given Java dependencies have any known CVEs",
				"modelDescription": "This tools checks if the given dependencies have any known vulnerabilities (CVEs). You MUST! use this tool to validate ALL the updated/added maven dependencies.",
				"canBeReferencedInPrompt": true,
				"inputSchema": {
					"type": "object",
					"properties": {
						"coordinates": {
							"type": "array",
							"description": "the coordinates of the dependencies to check for vulnerabilities. Each coordinate should be in the format of `groupId:artifactId:version`.",
							"examples": [
								"org.springframework:spring-core:5.3.9",
								"org.apache.commons:commons-lang3:3.12.0"
							],
							"items": {
								"type": "string",
								"description": "The coordinate of a dependency to check for vulnerabilities, in the format of `groupId:artifactId:version`."
							}
						}
					}
				}
			},
			{
				"name": "migration_assessmentReport",
				"tags": [
					"migration",
					"assessment",
					"report",
					"follow_up_assessment"
				],
				"toolReferenceName": "migration_assessmentReport",
				"displayName": "Open Assessment Report",
				"userDescription": "Open the assessment report webview to display detailed migration analysis results.",
				"modelDescription": "This tool opens the assessment report webview interface to display detailed migration assessment results, including identified issues, recommendations, and Azure readiness analysis. Use this tool immediately after a successful migration assessment to show the results to the user. This is the recommended next step after running migration assessment.",
				"canBeReferencedInPrompt": true,
				"inputSchema": {
					"type": "object",
					"properties": {}
				}
			},
			{
				"name": "uploadAssessSummaryReport",
				"tags": [
					"appcat"
				],
				"toolReferenceName": "uploadAssessSummaryReport",
				"displayName": "Upload Assessment Summary Report to GitHub Issue",
				"userDescription": "Upload the assessment summary report to github issue.",
				"modelDescription": "This tool upload the assessment summary report for the github issue after runnging the assessment.",
				"canBeReferencedInPrompt": true,
				"inputSchema": {
					"type": "object",
					"description": "Input parameters for uploading the assessment summary report to a GitHub issue.",
					"properties": {
						"owner": {
							"type": "string",
							"description": "Repository owner (username or organization)."
						},
						"repo": {
							"type": "string",
							"description": "Repository name."
						},
						"issueNumber": {
							"type": "number",
							"description": "Issue number to comment on."
						}
					},
					"required": [
						"owner",
						"repo",
						"issueNumber"
					]
				}
			},
			{
				"name": "appmod-build-project",
				"tags": [
					"migration",
					"build",
					"java"
				],
				"toolReferenceName": "appmod-build-project",
				"displayName": "Build Java Project",
				"userDescription": "(For migration only) This tool uses Maven or Gradle to build your project and report any detected errors after migration. You should use this tool to verify after making code changes, and fix any errors found.",
				"modelDescription": "(For migration only) This tool uses Maven or Gradle to build your project and report any detected errors after migration. You should use this tool to verify after making code changes, and fix any errors found.",
				"canBeReferencedInPrompt": true,
				"when": "config.appmod.enableMcpServer != true",
				"inputSchema": {
					"type": "object",
					"properties": {
						"workspacePath": {
							"type": "string",
							"description": "The workspace path for source code to be migrated"
						},
						"sessionId": {
							"type": "string",
							"description": "The session ID for tracking the migration process. This correlates operations across multiple tool calls in the same migration session."
						},
						"javaHome": {
							"type": "string",
							"description": "The absolute path of the appropriate JDK installation that can be found in the migration plan. You must set this parameter when a new JDK is installed during migration. It is JDK install path without bin"
						},
						"mavenHome": {
							"type": "string",
							"description": "The absolute path of the mvn/mvnw command location. If not using a wrapper, it MUST point to the MAVEN_HOME from the migration plan. If the project is using a wrapper, it is the workspace path. You must set this parameter when a new maven is installed during migration. It is maven install path without bin"
						}
					},
					"required": [
						"workspacePath",
						"sessionId"
					]
				}
			},
			{
				"name": "appmod-run-test",
				"tags": [
					"migration",
					"test",
					"java"
				],
				"toolReferenceName": "appmod-run-test",
				"displayName": "Run Java Tests",
				"userDescription": "This tool runs tests in the Java project and reports any detected errors or test failures after migration.",
				"modelDescription": "This tool runs tests in the Java project and reports any detected errors or test failures after migration.",
				"canBeReferencedInPrompt": true,
				"when": "config.appmod.enableMcpServer != true",
				"inputSchema": {
					"type": "object",
					"properties": {
						"workspacePath": {
							"type": "string",
							"description": "The workspace path for source code to be migrated"
						},
						"sessionId": {
							"type": "string",
							"description": "The session ID for tracking the migration process. This correlates operations across multiple tool calls in the same migration session."
						},
						"javaHome": {
							"type": "string",
							"description": "The absolute path of the appropriate JDK installation that can be found in the migration plan. You must set this parameter when a new JDK is installed during migration. It is JDK install path without bin"
						},
						"mavenHome": {
							"type": "string",
							"description": "The absolute path of the mvn/mvnw command location. If not using a wrapper, it MUST point to the MAVEN_HOME from the migration plan. If the project is using a wrapper, it is the workspace path. You must set this parameter when a new maven is installed during migration. It is maven install path without bin"
						}
					},
					"required": [
						"workspacePath",
						"sessionId"
					]
				}
			},
			{
				"name": "appmod-fix-test",
				"tags": [
					"migration",
					"test",
					"java"
				],
				"toolReferenceName": "appmod-fix-test",
				"displayName": "Fix Java Test Failures",
				"userDescription": "This tool generate a plan to guide you fix unit tests failures in the Java project after migration. You should strictly follow the plan to fix the unit tests failures.",
				"modelDescription": "This tool generate a plan to guide you fix unit tests failures in the Java project after migration. You should strictly follow the plan to fix the unit tests failures.",
				"canBeReferencedInPrompt": true,
				"when": "config.appmod.enableMcpServer != true",
				"inputSchema": {
					"type": "object",
					"properties": {
						"workspacePath": {
							"type": "string",
							"description": "The workspace path for source code to be migrated"
						},
						"sessionId": {
							"type": "string",
							"description": "The session ID for tracking the migration process. This correlates operations across multiple tool calls in the same migration session."
						},
						"maxIterations": {
							"type": "number",
							"description": "Maximum number of iterations for test fix attempts"
						}
					},
					"required": [
						"workspacePath",
						"sessionId"
					]
				}
			},
			{
				"name": "appmod-search-knowledgebase",
				"tags": [
					"migration",
					"knowledgebase",
					"search"
				],
				"toolReferenceName": "appmod-search-knowledgebase",
				"displayName": "Search Knowledge Base",
				"userDescription": "Searches the application modernization knowledge base using a query string. Returns relevant articles, documentation, and best practices. Use this tool to find information about app modernization strategies, migration paths, and common patterns.",
				"modelDescription": "Searches the application modernization knowledge base using a query string. Returns relevant articles, documentation, and best practices. Use this tool to find information about app modernization strategies, migration paths, and common patterns.",
				"canBeReferencedInPrompt": true,
				"when": "config.appmod.enableMcpServer != true",
				"inputSchema": {
					"type": "object",
					"properties": {
						"query": {
							"type": "string",
							"description": "The search query string to find relevant knowledge base."
						},
						"sessionId": {
							"type": "string",
							"description": "The session ID for tracking the migration process. This correlates operations across multiple tool calls in the same migration session."
						}
					},
					"required": [
						"query",
						"sessionId"
					]
				}
			},
			{
				"name": "appmod-search-file",
				"tags": [
					"migration",
					"file",
					"search"
				],
				"toolReferenceName": "appmod-search-file",
				"displayName": "Search Files",
				"userDescription": "Searches content from files in the project workspace by query and file patterns. Returns a list of files that match the search query. Use this tool to find specific code files or resources in your project based on patterns.",
				"modelDescription": "Searches content from files in the project workspace by query and file patterns. Returns a list of files that match the search query. Use this tool to find specific code files or resources in your project based on patterns.",
				"canBeReferencedInPrompt": true,
				"when": "config.appmod.enableMcpServer != true",
				"inputSchema": {
					"type": "object",
					"properties": {
						"workspacePath": {
							"type": "string",
							"description": "The path to the workspace where the search will be performed"
						},
						"query": {
							"type": "string",
							"description": "The query to search code lines from files. Could be regexp or string"
						},
						"includePattern": {
							"type": "string",
							"description": "Glob pattern to include files in the search, e.g., \"**/*.java\""
						},
						"sessionId": {
							"type": "string",
							"description": "The session ID for tracking the migration process. This correlates operations across multiple tool calls in the same migration session."
						}
					},
					"required": [
						"workspacePath",
						"query",
						"includePattern",
						"sessionId"
					]
				}
			},
			{
				"name": "appmod-fetch-knowledgebase",
				"tags": [
					"migration",
					"knowledgebase",
					"fetch"
				],
				"toolReferenceName": "appmod-fetch-knowledgebase",
				"displayName": "Fetch Knowledge Base",
				"userDescription": "Retrieves the complete content of a specific knowledge base article using its ID. Use this tool when you have a document ID and need to access its full content for detailed information about app modernization techniques.",
				"modelDescription": "Retrieves the complete content of a specific knowledge base article using its ID. Use this tool when you have a document ID and need to access its full content for detailed information about app modernization techniques.",
				"canBeReferencedInPrompt": true,
				"when": "config.appmod.enableMcpServer != true",
				"inputSchema": {
					"type": "object",
					"properties": {
						"kbId": {
							"type": "string",
							"description": "The ID of the knowledge base to retrieve. This is a unique identifier for the KB document."
						},
						"workspacePath": {
							"type": "string",
							"description": "The path to the workspace"
						},
						"sessionId": {
							"type": "string",
							"description": "The session ID for tracking the migration process. This correlates operations across multiple tool calls in the same migration session."
						}
					},
					"required": [
						"kbId",
						"workspacePath",
						"sessionId"
					]
				}
			},
			{
				"name": "appmod-create-migration-summary",
				"tags": [
					"migration",
					"summary",
					"report"
				],
				"toolReferenceName": "appmod-create-migration-summary",
				"displayName": "Create Migration Summary",
				"userDescription": "(For migration only) Generates a summary for the migration session, including details about the migration scenario, task name, modified files, and the final status of build and test fix operations. This tool helps you document the migration process and its outcomes.",
				"modelDescription": "(For migration only) Generates a summary for the migration session, including details about the migration scenario, task name, modified files, and the final status of build and test fix operations. This tool helps you document the migration process and its outcomes.",
				"canBeReferencedInPrompt": true,
				"when": "config.appmod.enableMcpServer != true",
				"inputSchema": {
					"type": "object",
					"properties": {
						"kbIds": {
							"type": "array",
							"items": {
								"type": "string"
							},
							"description": "The knowledge base ids which were used in code modifications. This is used to generate the migration summary."
						},
						"workspacePath": {
							"type": "string",
							"description": "The path to the workspace where the migration summary will be generated."
						},
						"sessionId": {
							"type": "string",
							"description": "The session ID for tracking the migration process. This correlates operations across multiple tool calls in the same migration session."
						},
						"status": {
							"type": "object",
							"description": "The migration status of the build, test, fix operations",
							"properties": {
								"buildFixStatus": {
									"type": "object",
									"description": "The status of the build fix operation, report only if the build fix tool is used, otherwise it will be set to unknown.",
									"properties": {
										"status": {
											"type": "string",
											"enum": [
												"success",
												"fail",
												"unknown"
											],
											"description": "The status of the report generation If it is not taken, it will be set to unknown."
										},
										"error": {
											"type": "string",
											"description": "An optional error message if the report generation failed."
										}
									},
									"required": [
										"status"
									]
								},
								"testFixStatus": {
									"type": "object",
									"description": "The status of the test fix operation, report only if the test fix tool is used, otherwise it will be set to unknown.",
									"properties": {
										"status": {
											"type": "string",
											"enum": [
												"success",
												"fail",
												"unknown"
											],
											"description": "The status of the report generation If it is not taken, it will be set to unknown."
										},
										"error": {
											"type": "string",
											"description": "An optional error message if the report generation failed."
										}
									},
									"required": [
										"status"
									]
								},
								"cveFixStatus": {
									"type": "object",
									"description": "The status of the CVE fix operation, report only if the CVE fix tool is used, otherwise it will be set to unknown.",
									"properties": {
										"status": {
											"type": "string",
											"enum": [
												"success",
												"fail",
												"unknown"
											],
											"description": "The status of the report generation If it is not taken, it will be set to unknown."
										},
										"error": {
											"type": "string",
											"description": "An optional error message if the report generation failed."
										}
									},
									"required": [
										"status"
									]
								},
								"consistencyCheckStatus": {
									"type": "object",
									"description": "The status of the consistency fix operation, report only if the consistency validation tool is used, otherwise it will be set to unknown.",
									"properties": {
										"status": {
											"type": "string",
											"enum": [
												"success",
												"fail",
												"unknown"
											],
											"description": "The status of the report generation If it is not taken, it will be set to unknown."
										},
										"error": {
											"type": "string",
											"description": "An optional error message if the report generation failed."
										},
										"result": {
											"type": "object",
											"description": "Number of inconsistencies remaining after all fix attempts",
											"properties": {
												"critical": {
													"type": "number",
													"description": "Number of critical inconsistencies remaining after all fix attempts."
												},
												"major": {
													"type": "number",
													"description": "Number of major inconsistencies remaining after all fix attempts."
												},
												"minor": {
													"type": "number",
													"description": "Number of minor inconsistencies remaining after all fix attempts."
												}
											},
											"required": [
												"critical",
												"major",
												"minor"
											]
										}
									},
									"required": [
										"status",
										"result"
									]
								},
								"completenessCheckStatus": {
									"type": "object",
									"description": "The status of the completeness fix operation, report only if the completeness validation tool is used, otherwise it will be set to unknown.",
									"properties": {
										"status": {
											"type": "string",
											"enum": [
												"success",
												"fail",
												"unknown"
											],
											"description": "The status of the report generation If it is not taken, it will be set to unknown."
										},
										"error": {
											"type": "string",
											"description": "An optional error message if the report generation failed."
										},
										"result": {
											"type": "object",
											"description": "Number of completeness issues remaining after all fix attempts",
											"properties": {
												"issuesFound": {
													"type": "number",
													"description": "Number of completeness issues remaining after all fix attempts."
												}
											},
											"required": [
												"issuesFound"
											]
										}
									},
									"required": [
										"status",
										"result"
									]
								}
							},
							"required": [
								"buildFixStatus",
								"testFixStatus",
								"cveFixStatus",
								"consistencyCheckStatus",
								"completenessCheckStatus"
							]
						},
						"versionControlSummary": {
							"type": "object",
							"description": "Summary of version control activities during the migration process",
							"properties": {
								"versionControlSystem": {
									"type": "string",
									"description": "Version control system of workspace."
								},
								"branchName": {
									"type": "string",
									"description": "The name of the branch used for migration."
								},
								"commitCount": {
									"type": "number",
									"description": "Number of commits made during the migration process."
								},
								"hasUncommittedChanges": {
									"type": "boolean",
									"description": "Whether there are uncommitted changes in the workspace."
								}
							},
							"required": [
								"versionControlSystem",
								"commitCount",
								"hasUncommittedChanges"
							]
						}
					},
					"required": [
						"kbIds",
						"workspacePath",
						"status",
						"sessionId",
						"versionControlSummary"
					]
				}
			},
			{
				"name": "appmod-run-task",
				"tags": [
					"migration",
					"task",
					"execution"
				],
				"toolReferenceName": "appmod-run-task",
				"displayName": "Run Migration Task",
				"userDescription": "This tool will start a new migration session to run task based on given scenario or knowledge base id. This tool will provide a comprehensive migration plan, including steps to build the project, run tests, fix test failures, and more. It is designed to automate the migration process for the applications.",
				"modelDescription": "Run a migration task based on given migration scenario or knowledge base id. This tool will provide a comprehensive migration plan, including steps to build the project, run tests, fix test failures, and more. It is designed to automate the migration process for the applications.",
				"canBeReferencedInPrompt": true,
				"when": "config.appmod.enableMcpServer != true",
				"inputSchema": {
					"type": "object",
					"properties": {
						"kbId": {
							"type": "string",
							"description": "The knowledge base ID to use for the migration plan"
						},
						"scenario": {
							"type": "string",
							"description": "The scenario for the migration plan"
						},
						"workspacePath": {
							"type": "string",
							"description": "The workspace path for source code to be migrated"
						}
					},
					"required": [
						"workspacePath"
					]
				}
			},
			{
				"name": "appmod-consistency-validation",
				"tags": [
					"migration",
					"validation",
					"consistency"
				],
				"toolReferenceName": "appmod-consistency-validation",
				"displayName": "Validate Migration Consistency",
				"userDescription": "This tool validates the consistency of migrated code by analyzing git diffs for any behavior changes. It identifies critical and major issues that need to be fixed to maintain functional equivalence between pre-migration and post-migration code.",
				"modelDescription": "This tool validates the consistency of migrated code by analyzing git diffs for any behavior changes. It identifies critical and major issues that need to be fixed to maintain functional equivalence between pre-migration and post-migration code.",
				"canBeReferencedInPrompt": true,
				"when": "config.appmod.enableMcpServer != true",
				"inputSchema": {
					"type": "object",
					"properties": {
						"workspacePath": {
							"type": "string",
							"description": "The workspace path for source code to be migrated"
						},
						"migrationScenario": {
							"type": "string",
							"description": "Description of the migration scenario being performed (e.g., 'ActiveMQ to Azure Service Bus', etc.). This helps provide context for the consistency validation process."
						},
						"kbIds": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "The knowledge base ids which were used in code modifications. This is used to generate the migration summary."
							},
							"description": "The knowledge base ids which were used in code modifications. This is used to generate the migration summary."
						},
						"sessionId": {
							"type": "string",
							"description": "The session ID for tracking the migration process. This correlates operations across multiple tool calls in the same migration session."
						}
					},
					"required": [
						"workspacePath",
						"migrationScenario",
						"kbIds",
						"sessionId"
					]
				}
			},
			{
				"name": "appmod-completeness-validation",
				"tags": [
					"migration",
					"validation",
					"completeness"
				],
				"toolReferenceName": "appmod-completeness-validation",
				"displayName": "Validate Migration Completeness",
				"userDescription": "This tool validates migration completeness by systematically discovering old technology references that should have been migrated but were left unchanged. It generates detailed validation guidelines to identify missing removals and incomplete transformations across all files in the workspace.",
				"modelDescription": "This tool validates migration completeness by systematically discovering old technology references that should have been migrated but were left unchanged. It generates detailed validation guidelines to identify missing removals and incomplete transformations across all files in the workspace.",
				"canBeReferencedInPrompt": true,
				"when": "config.appmod.enableMcpServer != true",
				"inputSchema": {
					"type": "object",
					"properties": {
						"workspacePath": {
							"type": "string",
							"description": "The workspace path for source code to be migrated"
						},
						"migrationScenario": {
							"type": "string",
							"description": "Description of the migration scenario being performed (e.g., 'ActiveMQ to Azure Service Bus', etc.). This helps provide context for the completeness validation process."
						},
						"kbIds": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "The knowledge base ids which were used in code modifications. This is used to generate the migration summary."
							},
							"description": "The knowledge base ids which were used in code modifications. This is used to generate the migration summary."
						},
						"sessionId": {
							"type": "string",
							"description": "The session ID for tracking the migration process. This correlates operations across multiple tool calls in the same migration session."
						}
					},
					"required": [
						"workspacePath",
						"migrationScenario",
						"kbIds",
						"sessionId"
					]
				}
			},
			{
				"name": "appmod-version-control",
				"tags": [
					"migration",
					"versioncontrol",
					"execution"
				],
				"toolReferenceName": "appmod-version-control",
				"displayName": "Version Control Management",
				"userDescription": "This tool performs version control operations for migration projects, such as checking repository status, creating branches, committing changes, stashing changes, and managing uncommitted changes during the migration process.",
				"modelDescription": "This tool manages version control operations during migration. It supports checking repository status, creating branches, committing changes, stashing changes, discarding changes, and checking for uncommitted changes to ensure proper tracking of code changes throughout the migration process.",
				"canBeReferencedInPrompt": true,
				"when": "config.appmod.enableMcpServer != true",
				"inputSchema": {
					"type": "object",
					"properties": {
						"workspacePath": {
							"type": "string",
							"description": "The absolute path to the workspace where version control operations should be performed."
						},
						"action": {
							"type": "string",
							"enum": [
								"checkStatus",
								"createBranch",
								"commitChanges",
								"stashChanges",
								"discardChanges",
								"checkForUncommittedChanges"
							],
							"description": "The version control action to perform. Available options: checkStatus (get repository status), createBranch (create new branch), commitChanges (commit all changes), stashChanges (stash working changes), discardChanges (discard all changes), checkForUncommittedChanges (check if workspace has uncommitted changes)."
						},
						"branchName": {
							"type": "string",
							"description": "The name of the branch to create. Optional parameter, but required when action is 'createBranch'."
						},
						"commitMessage": {
							"type": "string",
							"description": "The commit message to use. Optional parameter, but required when action is 'commitChanges'."
						},
						"stashMessage": {
							"type": "string",
							"description": "Message to include with stashed changes. Completely optional, only used when action is 'stashChanges'."
						}
					},
					"required": [
						"workspacePath",
						"action"
					]
				}
			}
		],
		"commands": [
			{
				"command": "migrate.java.formula.refresh",
				"title": "Refresh Task",
				"icon": "$(refresh)",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.formula.create",
				"title": "Create a Custom Task",
				"icon": "$(add)",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.formula.edit",
				"title": "Edit",
				"icon": "$(edit)",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.formula.run",
				"title": "Run Task",
				"icon": "$(run)",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.formula.delete",
				"title": "Delete",
				"icon": "$(trash)",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.formula.deleteAll",
				"title": "Delete",
				"icon": "$(trash)",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.formula.importFromLocal",
				"title": "Import a Custom Task",
				"icon": "$(icon-import)",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.formula.export",
				"title": "Export",
				"icon": "$(export)",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.formula.exportAll",
				"title": "Export",
				"icon": "$(export)",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.assessment",
				"title": "Run Assessment",
				"icon": "$(run)",
				"enablement": "assessmentEnabled",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.assessment.configure",
				"title": "Configure Assessment",
				"icon": "$(settings-gear)",
				"enablement": "assessmentEnabled",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.assessment.refresh",
				"title": "Refresh Assessment",
				"icon": "$(extensions-refresh)",
				"enablement": "assessmentEnabled",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.assessment.summaryReport",
				"title": "Open Summary Report",
				"icon": "$(run)",
				"visible": "true",
				"enablement": "assessmentEnabled",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.assessment.summaryReport.delete",
				"title": "Delete",
				"icon": "$(trash)",
				"visible": "true",
				"enablement": "assessmentEnabled",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.assessment.importFromLocal",
				"title": "Import",
				"icon": "$(icon-import)",
				"visible": "true",
				"enablement": "assessmentEnabled",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.assessment.importFromLocalCommandPalette",
				"title": "Import Assessment Report",
				"icon": "$(icon-import)",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.assessment.exportToLocal",
				"title": "Export",
				"icon": "$(export)",
				"visible": "true",
				"enablement": "assessmentEnabled",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.assessment.exportToLocalCommandPalette",
				"title": "Export Assessment Report",
				"icon": "$(export)",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.resource.documentation",
				"title": "View Documentation",
				"icon": "$(book)",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.resource.reportIssues",
				"title": "Report Issues on GitHub",
				"icon": "$(github)",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.resource.survey",
				"title": "Feedback via a survey",
				"icon": "$(feedback)",
				"category": "GitHub Copilot app modernization"
			},
			{
				"command": "migrate.java.appcat.install",
				"title": "Install or Upgrade AppCAT for Java",
				"icon": "$(desktop-download)",
				"category": "GitHub Copilot app modernization"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "migrate.java.formula.edit",
					"when": "false"
				},
				{
					"command": "migrate.java.formula.run",
					"when": "false"
				},
				{
					"command": "migrate.java.formula.delete",
					"when": "false"
				},
				{
					"command": "migrate.java.formula.deleteAll",
					"when": "false"
				},
				{
					"command": "migrate.java.formula.export",
					"when": "false"
				},
				{
					"command": "migrate.java.formula.exportAll",
					"when": "false"
				},
				{
					"command": "migrate.java.assessment.summaryReport",
					"when": "false"
				},
				{
					"command": "migrate.java.assessment.summaryReport.delete",
					"when": "false"
				},
				{
					"command": "migrate.java.assessment.exportToLocal",
					"when": "false"
				},
				{
					"command": "migrate.java.assessment.importFromLocal",
					"when": "false"
				}
			],
			"view/title": [
				{
					"command": "migrate.java.formula.create",
					"group": "navigation@1",
					"when": "view == migrate.java.formulaTreeView"
				},
				{
					"command": "migrate.java.formula.refresh",
					"group": "navigation@3",
					"when": "view == migrate.java.formulaTreeView"
				},
				{
					"command": "migrate.java.formula.importFromLocal",
					"group": "navigation@2",
					"when": "view == migrate.java.formulaTreeView"
				},
				{
					"command": "migrate.java.assessment",
					"group": "navigation@1",
					"when": "view == azureJavaMigrationAssessmentWebView || view == migrate.java.assessmentWelcomeView"
				},
				{
					"command": "migrate.java.assessment.importFromLocal",
					"group": "navigation@2",
					"when": "view == azureJavaMigrationAssessmentWebView || view == migrate.java.assessmentWelcomeView"
				},
				{
					"command": "migrate.java.assessment.configure",
					"group": "navigation@3",
					"when": "view == azureJavaMigrationAssessmentWebView || view == migrate.java.assessmentWelcomeView"
				},
				{
					"command": "migrate.java.assessment.refresh",
					"group": "navigation@4",
					"when": "view == azureJavaMigrationAssessmentWebView || view == migrate.java.assessmentWelcomeView"
				}
			],
			"view/item/context": [
				{
					"command": "migrate.java.formula.run",
					"when": "view == migrate.java.formulaTreeView && (viewItem == task  || viewItem == msft-formula-group || viewItem == formula-group || viewItem == msft-formula || viewItem == formula)",
					"group": "inline@1"
				},
				{
					"command": "migrate.java.formula.edit",
					"when": "view == migrate.java.formulaTreeView && viewItem == formula",
					"group": "navigation"
				},
				{
					"command": "migrate.java.formula.export",
					"when": "view == migrate.java.formulaTreeView && viewItem == formula",
					"group": "navigation"
				},
				{
					"command": "migrate.java.formula.exportAll",
					"when": "view == migrate.java.formulaTreeView && viewItem == formula-group",
					"group": "navigation"
				},
				{
					"command": "migrate.java.formula.delete",
					"when": "view == migrate.java.formulaTreeView && viewItem == formula",
					"group": "3_delete"
				},
				{
					"command": "migrate.java.formula.deleteAll",
					"when": "view == migrate.java.formulaTreeView && viewItem == formula-group",
					"group": "3_delete"
				},
				{
					"command": "migrate.java.assessment.exportToLocal",
					"when": "view == azureJavaMigrationAssessmentWebView && viewItem == summary",
					"group": "navigation@1"
				},
				{
					"command": "migrate.java.assessment.summaryReport.delete",
					"when": "view == azureJavaMigrationAssessmentWebView && viewItem == summary",
					"group": "navigation@2"
				}
			]
		},
		"configuration": {
			"type": "object",
			"title": "Migration Copilot Settings",
			"properties": {
				"migrateJava.enableVerboseLogging": {
					"type": "boolean",
					"default": true,
					"description": "Enable verbose logging for the extension. This will log more information to the Output tab and may help with troubleshooting issues.",
					"markdownDescription": "Enable verbose logging for the extension. This will log more information to the **Output** tab and may help with troubleshooting issues.",
					"deprecationMessage": "Deprecated. Please use `appmod.enableVerboseLogging` instead.",
					"markdownDeprecationMessage": "**Deprecated**. Please use `appmod.enableVerboseLogging` instead."
				},
				"appmod.enableVerboseLogging": {
					"type": "boolean",
					"default": true,
					"description": "Enable verbose logging for the extension. This will log more information to the Output tab and may help with troubleshooting issues.",
					"markdownDescription": "Enable verbose logging for the extension. This will log more information to the **Output** tab and may help with troubleshooting issues."
				},
				"appmod.enableMcpServer": {
					"type": "boolean",
					"default": false,
					"description": "Enable tools over MCP server."
				}
			}
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "azureJavaMigrationExplorer",
					"title": "GitHub Copilot app modernization",
					"icon": "assets/logo.svg"
				}
			]
		},
		"views": {
			"azureJavaMigrationExplorer": [
				{
					"id": "migrate.java.quickStartWelcomeView",
					"name": "QuickStart",
					"type": "webview"
				},
				{
					"id": "azureJavaMigrationAssessmentWebView",
					"name": "Assessment",
					"when": "assessmentReportExist == true"
				},
				{
					"id": "migrate.java.assessmentWelcomeView",
					"name": "Assessment",
					"when": "assessmentReportExist != true",
					"type": "webview"
				},
				{
					"id": "migrate.java.formulaTreeView",
					"name": "Tasks"
				},
				{
					"id": "migrate.java.helpFeedbackView",
					"name": "Help and Feedback",
					"visibility": "collapsed",
					"type": "tree"
				}
			]
		},
		"walkthroughs": [
			{
				"id": "javaAppModernization",
				"title": "Modernize with Copilot",
				"description": "GitHub Copilot app modernization helps you modernize your app quickly and confidently - with agentic AI on your side.",
				"steps": [
					{
						"id": "discoverExtension",
						"title": "Discover the App Modernization extension",
						"description": "Click below to open the extension sidebar and start modernizing your app.\n[Open app modernization Extension](command:workbench.view.extension.azureJavaMigrationExplorer)",
						"media": {
							"image": "assets/media/walkthrough/discover-extension.gif",
							"altText": "Discover the app modernization extension"
						},
						"completionEvents": [
							"onCommand:workbench.view.extension.azureJavaMigrationExplorer"
						]
					},
					{
						"id": "chooseModernizationPath",
						"title": "Choose your modernization path",
						"description": "• Upgrade Runtime & Frameworks - Automatically update your app to the latest supported Java versions and frameworks.\n• Migrate to Azure - Analyze your app, identify potential migration issues, and get solutions before you migrate.\n\nTip: Have a clear goal? Type it in [chat](command:migrate.java.runInAgentMode) and run it.",
						"media": {
							"image": "assets/media/walkthrough/choose-path.gif",
							"altText": "Choose your modernization path"
						},
						"completionEvents": [
							"onCommand:migrate.java.runInAgentMode"
						]
					},
					{
						"id": "exploreAgenticTasks",
						"title": "Explore More Agentic Tasks",
						"description": "Explore a curated list of agentic tasks covering upgrades, migrations, quality and security checks, deployments, and more. Pick what fits your project and run it with ease.\n[View Tasks](command:migrate.java.formulaTreeView.focus)",
						"media": {
							"image": "assets/media/walkthrough/explore-tasks.gif",
							"altText": "Explore More Agentic Tasks"
						},
						"completionEvents": [
							"onCommand:migrate.java.formulaTreeView.focus"
						]
					},
					{
						"id": "discoverMore",
						"title": "Discover More",
						"description": "Try the full set of modernization experience in the extension. For more details, check our documentation or just ask in the chat.\n[Open Documentation](command:migrate.java.resource.documentation)",
						"media": {
							"svg": "assets/media/walkthrough/explore-more.svg",
							"altText": "Discover More"
						},
						"completionEvents": [
							"onCommand:migrate.java.resource.documentation"
						]
					}
				]
			}
		]
	},
	"main": "./out/extension.js",
	"scripts": {
		"install:app-modernization-mcp-server": "node scripts/install-tgz.js \"./mcp-server/app-modernization-mcp-server-*.tgz\"",
		"install:codetocloudmcp": "node scripts/install-tgz.js \"./mcp-server/codetocloudmcp-*.tgz\"",
		"copy-mcp-bins": "node -e \"require('fs').cpSync('./mcp-server/dist/bins', './out/', {recursive: true, force: true})\"",
		"build-mcp-server": "cd mcp-server && npm install && npm run pack:tgz && npm run build && cd .. && npm run install:app-modernization-mcp-server && npm run install:codetocloudmcp",
		"package-mcp-server": "cd mcp-server && npm install && npm run pack:tgz && npm run package && cd .. && npm run install:app-modernization-mcp-server && npm run install:codetocloudmcp",
		"benchmark-local": "npm run compile && jest test/benchmark.test.ts",
		"generate-custom-formulas-local": "jest --forceExit --detectOpenHandles test/benchmark.generate-custom-formulas.test.ts",
		"benchmark": "npm run compile && node --experimental-vm-modules node_modules/jest/bin/jest.js --detectOpenHandles test/benchmark.test.ts",
		"benchmark-evaluate": "npm run compile && node --experimental-vm-modules node_modules/jest/bin/jest.js --detectOpenHandles test/benchmark-evaluate.test.ts",
		"benchmark-evaluate-msbench": "npm run compile && node --experimental-vm-modules node_modules/jest/bin/jest.js --detectOpenHandles test/benchmark-evaluate-msbench.test.ts",
		"benchmark-buildfix": "jest test/benchmark-buildfix.test.ts",
		"benchmark-regenerate-all": "node test/regenerate-all.cjs",
		"rai-test": "node --experimental-vm-modules node_modules/jest/bin/jest.js --detectOpenHandles test/rai.test.ts",
		"dependency-check": "jest test/dependency-check.test.ts",
		"dependency-cve-report": "jest test/dependency-cve-report.test.ts",
		"dependency-cve-report-msbench": "jest test/dependency-cve-report-msbench.test.ts",
		"copilot-auth": "node scripts/copilot-auth.js",
		"check-rules": "node scripts/check-rule-mapping.js",
		"compile": "npm run build-mcp-server && webpack --mode development",
		"watch": "npm run build-mcp-server && webpack --mode development",
		"build": "npm run build-mcp-server && webpack --mode development",
		"package": "npm run package-mcp-server && webpack --mode production --devtool hidden-source-map && npm run copy-mcp-bins",
		"vscode:prepublish": "npm run package",
		"ut": "jest --testMatch \"<rootDir>/autodev/**/*.test.ts\" \"<rootDir>/src/**/*.test.ts\" \"<rootDir>/mcp-server/src/**/*.test.ts\" --coverage",
		"formula-test": "jest test/formulaValidation.test.ts",
		"lint": "eslint .",
		"lint-fix": "eslint . --fix"
	},
	"devDependencies": {
		"@babel/core": "^7.26.10",
		"@babel/plugin-syntax-decorators": "^7.25.9",
		"@babel/preset-env": "^7.26.0",
		"@babel/preset-typescript": "^7.26.0",
		"@types/diff": "^5.2.2",
		"@types/fs-extra": "^11.0.4",
		"@types/jest": "^29.5.12",
		"@types/js-yaml": "^4.0.9",
		"@types/jszip": "^3.4.0",
		"@types/lodash": "^4.17.15",
		"@types/logfmt": "^1.2.6",
		"@types/node": "^20.5.9",
		"@types/react": "^18.3.5",
		"@types/react-dom": "^18.3.0",
		"@types/semver": "^7.5.8",
		"@types/uuid4": "^2.0.3",
		"@types/vscode": "^1.101.0",
		"@types/which": "^3.0.4",
		"@types/xml2js": "^0.4.14",
		"@typescript-eslint/eslint-plugin": "^7.14.0",
		"@typescript-eslint/parser": "^7.14.0",
		"@vscode/vsce": "^3.6.0",
		"babel-jest": "^29.7.0",
		"babel-plugin-dynamic-import-node": "^2.3.3",
		"clean-webpack-plugin": "^4.0.0",
		"copy-webpack-plugin": "^12.0.2",
		"css-loader": "^7.1.2",
		"esbuild-loader": "^4.3.0",
		"eslint": "^8.26.0",
		"html-loader": "^5.1.0",
		"jest": "^29.7.0",
		"jest-mock-vscode": "^4.0.4",
		"node-loader": "^2.0.0",
		"node-polyfill-webpack-plugin": "^4.0.0",
		"sass": "^1.78.0",
		"sass-loader": "^16.0.1",
		"style-loader": "^4.0.0",
		"ts-jest": "^29.2.3",
		"ts-node": "^10.9.2",
		"typescript": "^5.5.4",
		"webpack": "^5.99.9",
		"webpack-cli": "^6.0.1",
		"webpack-plugin": "^1.0.5"
	},
	"dependencies": {
		"@azure/identity": "^4.4.1",
		"@azure/keyvault-secrets": "^4.9.0",
		"@langchain/core": "^0.2.27",
		"@langchain/openai": "^0.3.14",
		"@microsoft/vscode-azext-utils": "^2.6.4",
		"@octokit/rest": "^20.0.2",
		"@types/csv-parse": "^1.1.12",
		"@types/difflib": "^0.2.7",
		"@types/uuid": "^10.0.0",
		"@vscode-elements/elements": "^1.16.0",
		"@vscode-elements/react-elements": "^1.15.1",
		"@vscode/codicons": "^0.0.36",
		"@vscode/extension-telemetry": "^0.9.8",
		"async-mutex": "^0.5.0",
		"axios": "^1.12.0",
		"azure-kusto-data": "^6.0.3",
		"bootstrap": "^5.3.3",
		"chardet": "^2.1.0",
		"class-transformer": "^0.5.1",
		"csv-parse": "^5.6.0",
		"date-fns": "^2.30.0",
		"diff": "^6.0.0",
		"difflib": "^0.2.4",
		"dotenv": "^16.5.0",
		"fast-xml-parser": "^4.5.0",
		"glob": "^11.0.0",
		"iconv-lite": "^0.6.3",
		"ignore": "^6.0.2",
		"jdk-utils": "^0.5.1",
		"js-yaml": "^4.1.0",
		"jsonwebtoken": "^9.0.2",
		"jszip": "^3.10.1",
		"langchain": "^0.2.16",
		"lodash": "^4.17.21",
		"logfmt": "^1.4.0",
		"node-stream-zip": "^1.15.0",
		"openai": "^4.56.0",
		"react": "^18.3.1",
		"react-bootstrap": "^2.10.4",
		"react-bootstrap-icons": "^1.11.3",
		"react-dom": "^18.3.1",
		"react-markdown": "^9.0.1",
		"react-tooltip": "^5.29.1",
		"recharts": "^2.15.3",
		"reflect-metadata": "^0.2.2",
		"simple-git": "^3.27.0",
		"tar": "^7.4.3",
		"tiktoken": "^1.0.20",
		"tinyglobby": "^0.2.10",
		"tree-sitter": "^0.21.1",
		"tree-sitter-java": "^0.21.0",
		"unzipper": "^0.12.3",
		"uuid": "^11.1.0",
		"uuid4": "^2.0.3",
		"which": "^5.0.0",
		"xml2js": "^0.6.2",
		"xregexp": "^5.1.2",
		"zod": "^3.23.8"
	},
	"optionalDependencies": {
		"app-modernization-mcp-server": "file:mcp-server/app-modernization-mcp-server-1.5.1.tgz",
		"codetocloudmcp": "file:mcp-server/codetocloudmcp-1.0.30.tgz"
	},
	"extensionDependencies": [
		"Github.copilot-chat",
		"vscjava.vscode-java-upgrade"
	],
	"__metadata": {
		"installedTimestamp": 1758758375897,
		"targetPlatform": "win32-x64",
		"size": 160111311
	}
}