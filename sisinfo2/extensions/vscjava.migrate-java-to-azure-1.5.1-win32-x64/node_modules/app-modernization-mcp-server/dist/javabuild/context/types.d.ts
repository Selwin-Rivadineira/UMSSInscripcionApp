/**
 * Represents an executable with its name, path, and version.
 *
 * @interface IExecutable
 *
 * @property {string} name - The name of the executable. For example, 'mvn', 'java'.
 * @property {string} path - The path to the executable. For example, '.', '%JAVA_HOME%/bin'.
 * @property {string} version - The version of the executable. For example, '3.6.3', '1.8'. For Java, it could be '1.8', '11', '17', etc.
 */
export interface IExecutable {
    name: string;
    path: string;
    version: string;
    args?: string[];
}
export interface IEnvironmentExecutable extends IExecutable {
    includeInPath?: boolean;
}
/**
 * Interface representing the configuration for a project.
 */
export interface IProjectConfiguration {
    /**
     * The working directory of the project.
     */
    workDir: string;
    /**
     * The path to the repository.
     */
    repoPath: string;
    /**
     * The branch that is currently being worked on.
     * Optional.
     */
    workingBranch?: string;
    /**
     * Indicates whether the working branch should be reused if it exists.
     * If true, the working branch will be reused if it exists.
     * If false, an error will be thrown if the branch exists.
     * In either case, if the branch does not exist, it will be created and checked out.
     * Optional.
     */
    reuseBranch?: boolean;
}
//# sourceMappingURL=types.d.ts.map