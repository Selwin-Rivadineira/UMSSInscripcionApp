import { IRunOptions } from '../common/shell';
import { ILogger } from '../common/types';
import { Environment } from '../context/Environment';
import { IJavaProjDeps } from '../dependency/JavaDependency';
import { setCmdInfo } from '../IBuildTool';
import { IBuildResult } from '../test/types';
export type mvnCmd = 'mvn' | 'mvnw';
export declare function mvnVersion(directory: string, mvn?: mvnCmd, logger?: ILogger, env?: Environment): Promise<string>;
export declare function parseMavenOutput(repoPath: string, output: string, logger?: ILogger): Promise<IBuildResult>;
export declare function mvnDirectDependencies(repoPath: string, mvn?: mvnCmd, env?: Environment, logger?: ILogger): Promise<{
    parsed: IJavaProjDeps;
    raw: string;
}>;
export declare function parseDirectDepsFromDependencyTree(output: string): IJavaProjDeps;
export declare function runMvnCmd(repoPath: string, mvn: mvnCmd | undefined, args: string[], env?: Environment | undefined, logger?: ILogger | undefined, cmdInfo?: setCmdInfo, runOptions?: IRunOptions): Promise<string>;
//# sourceMappingURL=maven.d.ts.map