export type TBuildErrors = {
    details: ErrorDetails[];
    raw: string;
};
export type TTestResult = {
    errors: TTestCaseErrorDetails[];
    failures: TTestCaseErrorDetails[];
    summary?: {
        tests: number;
        failures: number;
        errors: number;
        skipped: number;
    };
    reports: TSurefireReportTestSuite[];
    compileErrors?: ErrorDetails[];
};
export type TTestCaseErrorDetails = ErrorDetails & {
    testcaseName: string;
};
export type TSurefireReportTestSuite = {
    name?: string;
    time: number;
    tests: number;
    errors: number;
    skipped: number;
    failures: number;
    group?: string;
    testcases?: {
        name: string;
        classname: string;
        group: string;
        time: number;
        failures?: {
            message: string;
            type: string;
            content: string;
        }[];
        rerunFailures?: {
            message: string;
            type: string;
            content: string;
        }[];
        flakyFailures?: {
            message: string;
            type: string;
            content: string;
        }[];
        skipped?: {
            message: string;
        }[];
        errors?: {
            message: string;
            type: string;
            content: string;
        }[];
        rerunErrors?: {
            message: string;
            type: string;
            content: string;
        }[];
        flakyErrors?: {
            message: string;
            type: string;
            content: string;
        }[];
    }[];
};
export interface IBuildResult {
    success: boolean;
    details: ErrorDetails[];
    moduleBuildStatuses?: Map<string, boolean>;
}
export interface ErrorDetails {
    filepath?: string;
    lineNumber?: string;
    colNumber?: string;
    errorMessage: string;
    raw: string;
    recommendedFix?: string;
}
export interface IExtendedBuildResult extends IBuildResult {
    raw: string;
}
export interface IOpenRewriteRecipe {
    artifactId: string;
    groupId: string;
    id: string;
    description?: string;
    version?: string;
    versionForGradle?: string;
    url?: string;
    configLocation?: string;
}
//# sourceMappingURL=types.d.ts.map