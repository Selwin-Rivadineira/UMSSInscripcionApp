import { IJavaDep, IJavaDepChangesReport, IJavaProjDepChangesReport, IJavaProjDeps } from './JavaDependency';
/**
 * Parses a Maven dependency coordinate string and returns an `IJavaDep` object.
 *
 * The Maven dependency coordinate string should follow the format:
 * `groupId:artifactId:type[:classifier]:version[:scope]`.
 *
 * @param id - The Maven dependency coordinate string to parse.
 * @returns An `IJavaDep` object if the coordinate string is valid, otherwise `undefined`.
 *
 * @example
 *
 * Input: com.example:library:jar:classifier:1.0.0:compile
 *
 * Output:
 *  | Group | Value      | Description                        | Example     |
 *  |-------|------------|------------------------------------|-------------|
 *  | 1     | groupId    | Matches the group ID.              | com.example |
 *  | 2     | artifactId | Matches the artifact ID.           | library     |
 *  | 3     | type       | Matches the type.                  | jar         |
 *  | 5     | classifier | (Optional) Matches the classifier. | classifier  |
 *  | 6     | version    | Matches the version.               | 1.0.0       |
 *  | 8     | scope      | (Optinal) Matches the scope.       | compile     |
 */
export declare function parseJavaDepCoord(id: string): IJavaDep | undefined;
export declare function parseJavaDepCoordFromGradle(id: string): IJavaDep | undefined;
export declare function getJavaDepChanges(original: IJavaDep[], updated: IJavaDep[]): IJavaDepChangesReport;
export declare function getJavaProjDepChanges(oProjDeps: IJavaProjDeps, uProjDeps: IJavaProjDeps): IJavaProjDepChangesReport;
export declare function filterDeps(projectDeps: IJavaProjDeps, filter: (dep: IJavaDep) => boolean): IJavaProjDeps;
export declare function filterDepsByGroupId(projectDeps: IJavaProjDeps, groupId: string): IJavaProjDeps;
//# sourceMappingURL=JavaDependency.utils.d.ts.map