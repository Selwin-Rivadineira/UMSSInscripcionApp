import { ICoordinate } from './Coordinate';
/**
 * Interface representing the options for a dependency.
 *
 * @interface IJavaDepOpts
 *
 * @property {string} coordinate - The coordinate of the dependency.
 * @property {string} id - The unique identifier for the dependency.
 * @property {string} groupId - The group ID of the dependency.
 * @property {string} artifactId - The artifact ID of the dependency.
 * @property {string} version - The version of the dependency.
 * @property {string} type - The type of the dependency. (e.g. java-source, jar, war)
 * @property {string} scope - The scope of the dependency. (e.g. compile, test, provided)
 */
interface IJavaDepOpts extends ICoordinate {
    type?: string;
    classifier?: string;
    scope?: string;
}
/**
 * Represents a maven dependency with a unique key and a GAV (Group, Artifact, Version) identifier.
 *
 * @extends IJavaDepOpts
 *
 * @property {string} key - The unique key for the dependency.
 * @property {string} gav - The Group, Artifact, Version identifier for the dependency.
 */
export interface IJavaDep extends IJavaDepOpts {
    key: string;
    gav: string;
}
export declare class JavaDep implements IJavaDep {
    readonly coordinate: string;
    readonly groupId: string;
    readonly artifactId: string;
    readonly type?: string;
    readonly classifier?: string;
    readonly version: string;
    readonly scope?: string;
    constructor(options: IJavaDepOpts);
    get key(): string;
    get gav(): string;
}
/**
 * Interface representing a report of maven dependency changes.
 *
 * @interface IJavaDepChangesReport
 *
 * @property {IJavaDep[]} additions - List of dependencies that have been added.
 * @property {IJavaDep[]} removals - List of dependencies that have been removed.
 * @property {Array<{ original: IJavaDep; updated: IJavaDep; propDiff: string[] }>} updates - List of dependencies that have been updated, including the original and updated dependency and the properties that differ.
 * @property {number} count - Total count of dependency changes.
 */
export interface IJavaDepChangesReport {
    additions: IJavaDep[];
    removals: IJavaDep[];
    updates: {
        original: IJavaDep;
        updated: IJavaDep;
        propDiff: string[];
    }[];
    count: number;
}
/**
 * Interface representing the report of project dependencies changes.
 *
 * @interface IJavaProjDepChangesReport
 *
 * @property {number} numDepChanges - The number of dependency changes.
 * @property {Array<{ name: string; changes: IJavaDepChangesReport }>} projects - An array of projects with their respective dependency changes.
 */
export interface IJavaProjDepChangesReport {
    numDepChanges: number;
    projects: {
        name: string;
        changes: IJavaDepChangesReport;
    }[];
}
/**
 * Interface representing a collection of project dependencies.
 * Each key in the collection is a string that maps to an array of dependencies.
 */
export interface IJavaProjDeps {
    [key: string]: IJavaDep[];
}
export {};
//# sourceMappingURL=JavaDependency.d.ts.map