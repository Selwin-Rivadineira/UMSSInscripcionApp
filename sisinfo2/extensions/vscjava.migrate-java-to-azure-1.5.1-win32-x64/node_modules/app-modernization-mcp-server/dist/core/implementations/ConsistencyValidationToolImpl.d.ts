import { McpToolNames } from '../../tools/ToolNames';
import { McpContext } from '../../types';
import { ConsistencyValidationRequest } from '../request/ConsistencyValidationRequest';
import { BaseTool, ToolResponse } from '../Tool';
export declare class ConsistencyValidationToolImpl extends BaseTool<ConsistencyValidationRequest, ToolResponse> {
    name: McpToolNames;
    toolReferenceName: McpToolNames;
    displayName: string;
    description: "This tool validates the consistency of migrated code by analyzing git diffs for any behavior changes. It identifies critical and major issues that need to be fixed to maintain functional equivalence between pre-migration and post-migration code.";
    /**
     * Gets the git diff for the current working directory in the specified workspace
     * @param workspacePath - The path to the workspace
     * @param baselineRevisionId - The baseline revision/commit ID to compare against. If not provided, compares against the last commit
     * @returns The generated git diff as a string
     */
    private getGitDiff;
    execute(request: ConsistencyValidationRequest, context: McpContext): Promise<ToolResponse>;
}
//# sourceMappingURL=ConsistencyValidationToolImpl.d.ts.map