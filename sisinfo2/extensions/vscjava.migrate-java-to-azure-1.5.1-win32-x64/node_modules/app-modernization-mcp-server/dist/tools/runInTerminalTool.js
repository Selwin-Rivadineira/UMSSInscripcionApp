"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.runInTerminalSchema = void 0;
exports.runInTerminalTool = runInTerminalTool;
const child_process_1 = require("child_process");
const tsyringe_1 = require("tsyringe");
const zod_1 = require("zod");
const types_1 = require("../types");
const utils_1 = require("../utils");
exports.runInTerminalSchema = zod_1.z.object({
    command: zod_1.z.string().describe('The command to run in the terminal.'),
});
function runInTerminalTool(input) {
    const { command } = input;
    const logger = tsyringe_1.container.resolve(types_1.Beans.Logger);
    try {
        const output = (0, child_process_1.execSync)(command, { encoding: 'utf-8' });
        logger.info(`Command executed successfully: ${command}`);
        return utils_1.MCPOutput.success(`Command executed successfully: ${command}`, output);
    }
    catch (error) {
        const stderr = error.stderr ? error.stderr.toString() : '';
        const stdout = error.stdout ? error.stdout.toString() : '';
        const detailedError = [
            stdout && `${stdout}`,
            stderr && `STDERR: ${stderr}`,
            !stdout && !stderr && 'No output captured',
        ]
            .filter(Boolean)
            .join('\n');
        logger.error(`Failed to execute command: ${command}\n${detailedError}`);
        return utils_1.MCPOutput.error(`Failed to execute command: ${command}\n`, detailedError);
    }
}
//# sourceMappingURL=runInTerminalTool.js.map