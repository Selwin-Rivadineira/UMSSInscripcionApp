import { IKBLoader, IKBStoreChangeCallbacks } from '../kb/store';
import { MCPLogger } from '../logger';
import { Settings } from '../settings';
import { Formula, HasMetadata, KB, Prompt } from '../types';
import { DocumentLoaderLike } from './loaders';
export declare class FormulaToKb implements IKBLoader {
    private documentLoader;
    private settings;
    private logger;
    constructor(documentLoader: DocumentLoaderLike, settings: Settings, logger: MCPLogger);
    formulas(): Promise<Formula[]>;
    prompts(): Promise<Prompt[]>;
    private convert;
    private formulaConverter;
    private promptConverter;
    private formulaToKb;
    private promptToKb;
    private getFullGroupId;
    private formatGroupId;
    private getFormulaMetadata;
    load(): Promise<KB[]>;
    onChange(callbacks: IKBStoreChangeCallbacks): void;
    private buildIgnore;
}
export declare function formatKbIdentifier(hasMetadata: HasMetadata): string;
//# sourceMappingURL=formula_to_kb.d.ts.map