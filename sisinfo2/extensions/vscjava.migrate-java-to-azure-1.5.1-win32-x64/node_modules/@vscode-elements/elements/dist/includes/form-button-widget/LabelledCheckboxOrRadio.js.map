{"version":3,"file":"LabelledCheckboxOrRadio.js","sourceRoot":"","sources":["../../../src/includes/form-button-widget/LabelledCheckboxOrRadio.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,IAAI,EAAc,OAAO,EAAiB,MAAM,KAAK,CAAC;AAC9D,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAW3C,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAC1C,UAAa,EACb,EAAE;IACF,MAAM,uBAAwB,SAAQ,UAAU;QAAhD;;YAcU,WAAM,GAAG,EAAE,CAAC;YAEZ,iBAAY,GAAG,EAAE,CAAC;QAe5B,CAAC;QA7BC,IAAI,KAAK,CAAC,GAAW;YACnB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAElB,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE,CAAC;gBAC7B,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YACvC,CAAC;QACH,CAAC;QAED,IAAI,KAAK;YACP,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;QAMS,iBAAiB;YACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YAEpE,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE,CAAC;gBAC7B,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YACrD,CAAC;QACH,CAAC;QAES,qBAAqB;YAC7B,OAAO,IAAI,CAAC,YAAY,KAAK,EAAE;gBAC7B,CAAC,CAAC,IAAI,CAAA,4BAA4B,IAAI,CAAC,MAAM,SAAS;gBACtD,CAAC,CAAC,IAAI,CAAA,GAAG,OAAO,EAAE,CAAC;QACvB,CAAC;KACF;IA7BC;QADC,QAAQ,EAAE;wDAOV;IAyBH,OAAO,uBACJ,CAAC;AACN,CAAC,CAAC","sourcesContent":["import {html, LitElement, nothing, TemplateResult} from 'lit';\nimport {property} from 'lit/decorators.js';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Constructor<T = unknown> = new (...args: any[]) => T;\n\nexport declare class LabelledCheckboxOrRadioInterface {\n  label: string;\n  protected _handleSlotChange(): void;\n  protected _renderLabelAttribute(): TemplateResult;\n}\n\nexport const LabelledCheckboxOrRadioMixin = <T extends Constructor<LitElement>>(\n  superClass: T\n) => {\n  class LabelledCheckboxOrRadio extends superClass {\n    @property()\n    set label(val: string) {\n      this._label = val;\n\n      if (this._slottedText === '') {\n        this.setAttribute('aria-label', val);\n      }\n    }\n\n    get label(): string {\n      return this._label;\n    }\n\n    private _label = '';\n\n    private _slottedText = '';\n\n    protected _handleSlotChange(): void {\n      this._slottedText = this.textContent ? this.textContent.trim() : '';\n\n      if (this._slottedText !== '') {\n        this.setAttribute('aria-label', this._slottedText);\n      }\n    }\n\n    protected _renderLabelAttribute(): TemplateResult {\n      return this._slottedText === ''\n        ? html`<span class=\"label-attr\">${this._label}</span>`\n        : html`${nothing}`;\n    }\n  }\n\n  return LabelledCheckboxOrRadio as unknown as Constructor<LabelledCheckboxOrRadioInterface> &\n    T;\n};\n"]}