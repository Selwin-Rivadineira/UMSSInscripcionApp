{"version":3,"file":"vscode-option.js","sourceRoot":"","sources":["../../src/vscode-option/vscode-option.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,IAAI,EAAiC,MAAM,KAAK,CAAC;AACzD,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC3C,OAAO,EAAC,aAAa,EAAE,UAAU,EAAC,MAAM,2BAA2B,CAAC;AACpE,OAAO,MAAM,MAAM,2BAA2B,CAAC;AAE/C;;GAEG;AAEI,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,UAAU;IAArC;;QAOL,gBAAW,GAAG,EAAE,CAAC;QAGjB,aAAQ,GAAG,KAAK,CAAC;QAGjB,aAAQ,GAAG,KAAK,CAAC;QAET,iBAAY,GAAG,KAAK,CAAC;QAuBrB,sBAAiB,GAAG,GAAG,EAAE;YAC/B,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;gBACtB,gBAAgB;gBAChB,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,yBAAyB,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;YAC5E,CAAC;QACH,CAAC,CAAC;IAKJ,CAAC;IA/BU,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE1B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE;YAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAEkB,UAAU,CAAC,iBAAiC;QAC7D,IACE,IAAI,CAAC,YAAY;YACjB,CAAC,iBAAiB,CAAC,GAAG,CAAC,aAAa,CAAC;gBACnC,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC;gBAC9B,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAC;gBACjC,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EACpC,CAAC;YACD,gBAAgB;YAChB,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,yBAAyB,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;QAC5E,CAAC;IACH,CAAC;IASQ,MAAM;QACb,OAAO,IAAI,CAAA,qBAAqB,IAAI,CAAC,iBAAiB,UAAU,CAAC;IACnE,CAAC;;AA9Ce,mBAAM,GAAG,MAAM,AAAT,CAAU;AAGhC;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;2CACE;AAG3B;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;iDACR;AAGjB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;8CACxB;AAGjB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;8CACxB;AAbN,YAAY;IADxB,aAAa,CAAC,eAAe,CAAC;GAClB,YAAY,CAgDxB","sourcesContent":["import {html, PropertyValues, TemplateResult} from 'lit';\nimport {property} from 'lit/decorators.js';\nimport {customElement, VscElement} from '../includes/VscElement.js';\nimport styles from './vscode-option.styles.js';\n\n/**\n * @tag vscode-option\n */\n@customElement('vscode-option')\nexport class VscodeOption extends VscElement {\n  static override styles = styles;\n\n  @property({type: String})\n  value?: string | undefined;\n\n  @property({type: String})\n  description = '';\n\n  @property({type: Boolean, reflect: true})\n  selected = false;\n\n  @property({type: Boolean, reflect: true})\n  disabled = false;\n\n  private _initialized = false;\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    this.updateComplete.then(() => {\n      this._initialized = true;\n    });\n  }\n\n  protected override willUpdate(changedProperties: PropertyValues): void {\n    if (\n      this._initialized &&\n      (changedProperties.has('description') ||\n        changedProperties.has('value') ||\n        changedProperties.has('selected') ||\n        changedProperties.has('disabled'))\n    ) {\n      /** @internal */\n      this.dispatchEvent(new Event('vsc-option-state-change', {bubbles: true}));\n    }\n  }\n\n  private _handleSlotChange = () => {\n    if (this._initialized) {\n      /** @internal */\n      this.dispatchEvent(new Event('vsc-option-state-change', {bubbles: true}));\n    }\n  };\n\n  override render(): TemplateResult {\n    return html`<slot @slotchange=${this._handleSlotChange}></slot>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'vscode-option': VscodeOption;\n  }\n}\n"]}