name: 'Migrate Ehcache Gradle dependencies to Azure Cache for Redis'
description: "Replaces Ehcache Gradle dependencies with Azure Cache for Redis dependencies"
codeLocation:
  type: textsearch
  filePattern: '**/{build.gradle,build.gradle.kts}'
  codePattern: >-
    net.sf.ehcache:ehcache|net.sf.ehcache:ehcache-core|org.springframework.boot:spring-boot-starter-cache|org.ehcache:ehcache

steps:
  - description: "Migrate Ehcache Gradle dependencies to Azure Cache for Redis dependencies"
    type: "instruction"
    content: |
      Your task is to migrate a Gradle build file (Groovy or Kotlin DSL) from using Ehcache dependencies to Azure Cache for Redis dependencies. Follow these detailed instructions to make the transition:

      ## Identifying Ehcache Dependencies
      
      First, look for the following Ehcache-related dependencies in your Gradle build file:
      
      1. Standard Ehcache dependencies (net.sf.ehcache:ehcache)
      2. Ehcache core dependencies (net.sf.ehcache:ehcache-core)
      3. Ehcache 3.x dependencies (org.ehcache:ehcache)
      4. Spring Boot Cache starter used with Ehcache
      
      Look for both Groovy DSL format (`implementation 'net.sf.ehcache:ehcache:2.10.6'`) and Kotlin DSL format (`implementation("net.sf.ehcache:ehcache:2.10.6")`).
      
      ## Replacement Strategy
      
      Make the following replacements while maintaining the same DSL style (Groovy or Kotlin):
      
      1. For Spring applications:
         - Keep the spring-boot-starter-cache dependency if it exists, make the version 3.5.3 (or match your Spring Boot version)
         - Remove all Ehcache-specific dependencies
         - Add spring-boot-starter-data-redis with version 3.5.3 (or match your Spring Boot version)
      
      2. For non-Spring applications:
         - Remove all Ehcache dependencies
         - Add io.lettuce:lettuce-core with version 6.7.1.RELEASE (or latest stable)
      
      ## Implementation Considerations
      
      - Keep the Spring Boot Cache starter if present, as it provides the cache abstraction layer
      - Always include version numbers in your new dependencies for clarity
      - If the project uses version catalogs or variables for versions, maintain that pattern
      - Detect and preserve the DSL style (Groovy vs Kotlin) when making changes
      - Be aware that Spring Boot Redis starter already includes Lettuce as the default client
      - Update any version declarations in gradle.properties or buildSrc if applicable
