name: 'Migrate AWS SecretsManagerClient to Spring Cloud Azure Key Vault SecretClient'
description: "Migrate AWS SecretsManagerClient to Spring Cloud Azure Key Vault SecretClient with Spring auto-wiring."
codeLocation:
  type: textsearch
  filePattern: '**/*.java'
  codePattern: >-
    SecretsManagerClient|AWSSecretsManager|SecretsManagerClientBuilder|AWSSecretsManagerClientBuilder
steps:
  - description: "Migrate AWS SecretsManagerClient to Spring Cloud Azure Key Vault SecretClient"
    type: "instruction"
    content: |
      [INTERNAL NOTE: This step must only be executed when the migration strategy is Path 3. If it is not Path 3, do not output anything.]
      Your task is to migrate a Java file from using the AWS SecretsManager API to the Azure Keyvault API while maintaining the same functionality. Below is a reference to the relevant Azure Keyvault APIs for your convenience. You can tell whether it's an AWS or Azure API from the package name. Replace all references to AWS SecretsManager APIs with equivalent Azure Keyvault APIs, using the provided API descriptions as guidance. Ensure the resulting code is clean, efficient, and preserves the original functionality.

      Additionally, migrate from manual initialization of AWS SecretsManagerClient to Spring's auto-wiring mechanism using Azure Key Vault. With the `spring-cloud-azure-starter-keyvault` dependency, Spring automatically provides and wires the `SecretClient` bean. This eliminates the need for manual initialization or configuration of the `SecretClient` bean. For example:
      Before (Manual Initialization):
      ```java
      import software.amazon.awssdk.regions.Region;
      import software.amazon.awssdk.services.secretsmanager.SecretsManagerClient;

      public class AWSSecretManager {
          SecretsManagerClient client = SecretsManagerClient.builder()
                          .region(region)
                          .build();
      }
      ```

      After (Spring Auto-Wiring):
      ```java
      import com.azure.security.keyvault.secrets.SecretClient;
      import org.springframework.stereotype.Service;

      @Service
      public class AWSSecretManager {
          private final SecretClient secretClient;

          public AWSSecretManager(SecretClient secretClient) {
              this.secretClient = secretClient;
          }
      }
      ```

      Note:
      Carefully check the codes, do not modify the methods/constants/configurations (e.g., `AWSCredentials`, `BasicAWSCredentials`) used by other AWS services (e.g., S3, SQS, SNS, etc.). Modify them only if they are exclusively used by AWS Secrets Manager.

      Below are the APIs provided for your reference, don't forget to import the package whenever you are adding a new class reference in code edit:

      Interface: SecretsManagerClient
        Package: software.amazon.awssdk.services.secretsmanager
        Methods:
          - static SecretsManagerClientBuilder builder()
            Description: Create a builder that can be used to configure and create a SecretsManagerClient.
            Details: A builder for creating an instance of SecretsManagerClient. This can be created with the static SecretsManagerClient.builder() method.

      Interface: SecretsManagerClientBuilder
        Package: software.amazon.awssdk.services.secretsmanager
        Super interfaces:
          - AwsClientBuilder<SecretsManagerClientBuilder,SecretsManagerClient>
          - AwsSyncClientBuilder<SecretsManagerClientBuilder,SecretsManagerClient>
          - Buildable
          - SdkBuilder<SecretsManagerClientBuilder,SecretsManagerClient>
          - SdkClientBuilder<SecretsManagerClientBuilder,SecretsManagerClient>
          - SdkSyncClientBuilder<SecretsManagerClientBuilder,SecretsManagerClient>
          - SecretsManagerBaseClientBuilder<SecretsManagerClientBuilder,SecretsManagerClient>

      Interface AwsClientBuilder<BuilderT extends AwsClientBuilder<BuilderT,ClientT>,ClientT>
        Type Parameters:
          - BuilderT: The type of builder that should be returned by the fluent builder methods in this interface.
          - ClientT: The type of client generated by this builder.
        Methods:
          - default SecretsManagerClientBuilder credentialsProvider(AwsCredentialsProvider credentialsProvider)
            Description: Configure the credentials that should be used to authenticate with AWS.
          - default SecretsManagerClientBuilder credentialsProvider(IdentityProvider<? extends AwsCredentialsIdentity> credentialsProvider)
            Description: Configure the credentials that should be used to authenticate with AWS.
          - SecretsManagerClientBuilder region(Region region)
            Description: Configure the region with which the SDK should communicate.

      Interface SdkBuilder<B extends SdkBuilder<B,T>,T>
        Type Parameters:
          - T: the type that the builder will build
          - B: the builder type (this)
        Methods:
          - SecretsManagerClient build()
            Description: An immutable object that is created from the properties that have been set on the builder.
            Returns: An instance of T

      Interface: AWSSecretsManager
        Package: com.amazonaws.services.secretsmanager
        Methods:
          - BatchGetSecretValueResult batchGetSecretValue(BatchGetSecretValueRequest batchGetSecretValueRequest)
            Description: Retrieves the contents of the encrypted fields SecretString or SecretBinary for up to 20 secrets. To retrieve a single secret, call GetSecretValue.
            Parameters:
            - batchGetSecretValueRequest -
            Returns: Result of the BatchGetSecretValue operation returned by the service.
          - CancelRotateSecretResult cancelRotateSecret(CancelRotateSecretRequest cancelRotateSecretRequest)
            Description: Turns off automatic rotation, and if a rotation is currently in progress, cancels the rotation.
            Parameters:
            - cancelRotateSecretRequest -
            Returns: Result of the CancelRotateSecret operation returned by the service.
          - CreateSecretResult createSecret(CreateSecretRequest createSecretRequest)
            Description: Creates a new secret. A secret can be a password, a set of credentials such as a user name and password, an OAuth token, or other secret information that you store in an encrypted form in Secrets Manager. The secret also includes the connection information to access a database or other service, which Secrets Manager doesn't encrypt. A secret in Secrets Manager consists of both the protected secret data and the important information needed to manage the secret.
            Parameters:
            - createSecretRequest -
            Returns: Result of the CreateSecret operation returned by the service.
          - DeleteResourcePolicyResult deleteResourcePolicy(DeleteResourcePolicyRequest deleteResourcePolicyRequest)
            Description: Deletes the resource-based permission policy attached to the secret. To attach a policy to a secret, use PutResourcePolicy.
            Parameters:
            - deleteResourcePolicyRequest -
            Returns: Result of the DeleteResourcePolicy operation returned by the service.
          - DeleteSecretResult deleteSecret(DeleteSecretRequest deleteSecretRequest)
            Description: Deletes a secret and all of its versions. You can specify a recovery window during which you can restore the secret. The minimum recovery window is 7 days. The default recovery window is 30 days. Secrets Manager attaches a DeletionDate stamp to the secret that specifies the end of the recovery window. At the end of the recovery window, Secrets Manager deletes the secret permanently.
            Parameters:
            - deleteSecretRequest -
            Returns: Result of the DeleteSecret operation returned by the service.
          - DescribeSecretResult describeSecret(DescribeSecretRequest describeSecretRequest)
            Description: Retrieves the details of a secret. It does not include the encrypted secret value. Secrets Manager only returns fields that have a value in the response.
            Parameters:
            - describeSecretRequest -
            Returns: Result of the DescribeSecret operation returned by the service.
          - GetRandomPasswordResult getRandomPassword(GetRandomPasswordRequest getRandomPasswordRequest)
            Description: Generates a random password. We recommend that you specify the maximum length and include every character type that the system you are generating a password for can support. By default, Secrets Manager uses uppercase and lowercase letters, numbers, and the following characters in passwords: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~
            Parameters:
            - getRandomPasswordRequest -
            Returns: Result of the GetRandomPassword operation returned by the service.
          - GetResourcePolicyResult getResourcePolicy(GetResourcePolicyRequest getResourcePolicyRequest)
            Description: Retrieves the JSON text of the resource-based policy document attached to the secret. For more information about permissions policies attached to a secret, see Permissions policies attached to a secret.
            Parameters:
            - getResourcePolicyRequest -
            Returns: Result of the GetResourcePolicy operation returned by the service.
          - GetSecretValueResult getSecretValue(GetSecretValueRequest getSecretValueRequest)
            Description: Retrieves the contents of the encrypted fields SecretString or SecretBinary from the specified version of a secret, whichever contains content.
            Parameters:
            - getSecretValueRequest -
            Returns: Result of the GetSecretValue operation returned by the service.
          - ListSecretVersionIdsResult listSecretVersionIds(ListSecretVersionIdsRequest listSecretVersionIdsRequest)
            Description: Lists the versions of a secret. Secrets Manager uses staging labels to indicate the different versions of a secret. For more information, see Secrets Manager concepts: Versions.
            Parameters:
            - listSecretVersionIdsRequest -
            Returns: Result of the ListSecretVersionIds operation returned by the service.
          - ListSecretsResult listSecrets(ListSecretsRequest listSecretsRequest)
            Description: Lists the secrets that are stored by Secrets Manager in the Amazon Web Services account, not including secrets that are marked for deletion. To see secrets marked for deletion, use the Secrets Manager console.
            Parameters:
            - listSecretsRequest -
            Returns: Result of the ListSecrets operation returned by the service.
          - PutResourcePolicyResult putResourcePolicy(PutResourcePolicyRequest putResourcePolicyRequest)
            Description: Attaches a resource-based permission policy to a secret. A resource-based policy is optional. For more information, see Authentication and access control for Secrets Manager
            Parameters:
            - putResourcePolicyRequest -
            Returns: Result of the PutResourcePolicy operation returned by the service.
          - PutSecretValueResult putSecretValue(PutSecretValueRequest putSecretValueRequest)
            Description: Creates a new version with a new encrypted secret value and attaches it to the secret. The version can contain a new SecretString value or a new SecretBinary value.
            Parameters:
            - putSecretValueRequest -
            Returns: Result of the PutSecretValue operation returned by the service.
          - RemoveRegionsFromReplicationResult removeRegionsFromReplication(RemoveRegionsFromReplicationRequest removeRegionsFromReplicationRequest)
            Description: For a secret that is replicated to other Regions, deletes the secret replicas from the Regions you specify.
            Parameters:
            - removeRegionsFromReplicationRequest -
            Returns: Result of the RemoveRegionsFromReplication operation returned by the service.
          - ReplicateSecretToRegionsResult replicateSecretToRegions(ReplicateSecretToRegionsRequest replicateSecretToRegionsRequest)
            Description: Replicates the secret to a new Regions. See Multi-Region secrets.
            Parameters:
            - replicateSecretToRegionsRequest -
            Returns: Result of the ReplicateSecretToRegions operation returned by the service.
          - RestoreSecretResult restoreSecret(RestoreSecretRequest restoreSecretRequest)
            Description: Cancels the scheduled deletion of a secret by removing the DeletedDate time stamp. You can access a secret again after it has been restored.
            Parameters:
            - restoreSecretRequest -
            Returns: Result of the RestoreSecret operation returned by the service.
          - RotateSecretResult rotateSecret(RotateSecretRequest rotateSecretRequest)
            Description: Configures and starts the asynchronous process of rotating the secret. For information about rotation, see Rotate secrets in the Secrets Manager User Guide. If you include the configuration parameters, the operation sets the values for the secret and then immediately starts a rotation. If you don't include the configuration parameters, the operation starts a rotation with the values already stored in the secret.
            Parameters:
            - rotateSecretRequest -
            Returns: Result of the RotateSecret operation returned by the service.
          - StopReplicationToReplicaResult stopReplicationToReplica(StopReplicationToReplicaRequest stopReplicationToReplicaRequest)
            Description: Removes the link between the replica secret and the primary secret and promotes the replica to a primary secret in the replica Region.
            Parameters:
            - stopReplicationToReplicaRequest -
            Returns: Result of the StopReplicationToReplica operation returned by the service.
          - TagResourceResult tagResource(TagResourceRequest tagResourceRequest)
            Description: Attaches tags to a secret. Tags consist of a key name and a value. Tags are part of the secret's metadata. They are not associated with specific versions of the secret. This operation appends tags to the existing list of tags.
            Parameters:
            - tagResourceRequest -
            Returns: Result of the TagResource operation returned by the service.
          - UntagResourceResult untagResource(UntagResourceRequest untagResourceRequest)
            Description: Removes specific tags from a secret.
            Parameters:
            - untagResourceRequest -
            Returns: Result of the UntagResource operation returned by the service.
          - UpdateSecretResult updateSecret(UpdateSecretRequest updateSecretRequest)
            Description: Modifies the details of a secret, including metadata and the secret value. To change the secret value, you can also use PutSecretValue.
            Parameters:
            - updateSecretRequest -
            Returns: Result of the UpdateSecret operation returned by the service.
          - UpdateSecretVersionStageResult updateSecretVersionStage(UpdateSecretVersionStageRequest updateSecretVersionStageRequest)
            Description: Modifies the staging labels attached to a version of a secret. Secrets Manager uses staging labels to track a version as it progresses through the secret rotation process. Each staging label can be attached to only one version at a time. To add a staging label to a version when it is already attached to another version, Secrets Manager first removes it from the other version first and then attaches it to this one. For more information about versions and staging labels, see Concepts: Version.
            Parameters:
            - updateSecretVersionStageRequest -
            Returns: Result of the UpdateSecretVersionStage operation returned by the service.
          - ValidateResourcePolicyResult validateResourcePolicy(ValidateResourcePolicyRequest validateResourcePolicyRequest)
            Description: Validates that a resource policy does not grant a wide range of principals access to your secret. A resource-based policy is optional for secrets.
            Parameters:
            - validateResourcePolicyRequest -
            Returns: Result of the ValidateResourcePolicy operation returned by the service.

      Class AWSSecretsManagerClientBuilder
        Package: com.amazonaws.services.secretsmanager
        Methods:
          - public static AWSSecretsManagerClientBuilder standard()
            Returns:
            Create new instance of builder with all defaults set.
          - public static AWSSecretsManager defaultClient()
            Returns:
            Default client using the DefaultAWSCredentialsProviderChain and DefaultAwsRegionProviderChain chain.
