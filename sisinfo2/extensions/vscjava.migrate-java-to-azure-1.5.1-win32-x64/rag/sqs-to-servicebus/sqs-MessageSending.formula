name: "Migrate AWS Simple Queue Service Message Sending Operations"
description: "Migrate AWS Simple Queue Service (SQS) message sending operations to Azure Service Bus"

codeLocation:
  type: textsearch
  filePattern: '**/*.java'
  codePattern: "SendMessageRequest|SendMessageBatchRequest|AmazonSQS|SqsClient"

steps:
  - description: "Migrate AWS Simple Queue Service message sending operations to Azure Service Bus"
    type: "instruction"
    content: |
      Your task is to migrate Java code that uses AWS Simple Queue Service message sending operations to Azure Service Bus message sending operations while maintaining the same functionality.

      Important guidelines:

      1. Message Sending Operations:
         - For AWS SDK v1 (com.amazonaws.services.sqs), replace sendMessage operations with Azure ServiceBusSenderClient send operations
         - For AWS SDK v2 (software.amazon.awssdk.services.sqs), replace sendMessage operations with Azure ServiceBusSenderClient send operations
         - AWS Simple Queue Service uses queue URLs, while Azure Service Bus uses queue names

      2. Single Message Sending:
         - Example of AWS SQS v1 message sending to replace:
           ```java
           // Using direct method
           sqsClient.sendMessage(queueUrl, messageBody);

           // Using request object
           SendMessageRequest sendMessageRequest = new SendMessageRequest()
               .withQueueUrl(queueUrl)
               .withMessageBody(messageBody)
               .withDelaySeconds(delaySeconds)
               .withMessageAttributes(messageAttributes);
           sqsClient.sendMessage(sendMessageRequest);
           ```

         - Example of AWS SQS v2 message sending to replace:
           ```java
           // Using direct method
           sqsClient.sendMessage(SendMessageRequest.builder()
               .queueUrl(queueUrl)
               .messageBody(messageBody)
               .delaySeconds(delaySeconds)
               .messageAttributes(messageAttributes)
               .build());
           ```

         - Azure Service Bus replacement:
           ```java
           // Create a message with properties
           ServiceBusMessage message = new ServiceBusMessage(messageBody);

           // Set properties (equivalent to SQS message attributes)
           if (messageAttributes != null) {
               for (Map.Entry<String, MessageAttributeValue> entry : messageAttributes.entrySet()) {
                   message.getApplicationProperties().put(entry.getKey(), entry.getValue().getStringValue());
               }
           }

           // Set scheduled enqueue time (equivalent to SQS delay seconds)
           if (delaySeconds > 0) {
               message.setScheduledEnqueueTime(OffsetDateTime.now().plusSeconds(delaySeconds));
           }

           // Send the message
           sender.sendMessage(message);
           ```

      3. Batch Message Sending:
         - Example of AWS SQS v1 batch message sending to replace:
           ```java
           // Create batch request entries
           List<SendMessageBatchRequestEntry> entries = new ArrayList<>();
           entries.add(new SendMessageBatchRequestEntry("id1", "message1"));
           entries.add(new SendMessageBatchRequestEntry("id2", "message2"));

           // Send batch
           SendMessageBatchRequest batchRequest = new SendMessageBatchRequest()
               .withQueueUrl(queueUrl)
               .withEntries(entries);
           sqsClient.sendMessageBatch(batchRequest);
           ```

         - Example of AWS SQS v2 batch message sending to replace:
           ```java
           // Create batch request entries
           List<SendMessageBatchRequestEntry> entries = Arrays.asList(
               SendMessageBatchRequestEntry.builder()
                   .id("id1")
                   .messageBody("message1")
                   .build(),
               SendMessageBatchRequestEntry.builder()
                   .id("id2")
                   .messageBody("message2")
                   .build()
           );

           // Send batch
           sqsClient.sendMessageBatch(SendMessageBatchRequest.builder()
               .queueUrl(queueUrl)
               .entries(entries)
               .build());
           ```

         - Azure Service Bus replacement:
           ```java
           // Create a list of messages
           List<ServiceBusMessage> messages = Arrays.asList(
               new ServiceBusMessage("message1"),
               new ServiceBusMessage("message2")
           );

           // Send the batch of messages
           sender.sendMessages(messages);
           ```

      4. Message Attributes Mapping:
         - Map AWS SQS message attributes to Azure Service Bus application properties:
           ```java
           // AWS SQS v1
           Map<String, MessageAttributeValue> attributes = new HashMap<>();
           attributes.put("AttributeName", new MessageAttributeValue()
               .withDataType("String")
               .withStringValue("AttributeValue"));

           // AWS SQS v2
           Map<String, MessageAttributeValue> attributes = new HashMap<>();
           attributes.put("AttributeName", MessageAttributeValue.builder()
               .dataType("String")
               .stringValue("AttributeValue")
               .build());

           // Azure Service Bus equivalent
           ServiceBusMessage message = new ServiceBusMessage(messageBody);
           message.getApplicationProperties().put("AttributeName", "AttributeValue");
           ```

      5. Import Cleanup:
         - Remove all AWS SQS-related imports after migration:
           - All imports from packages starting with 'com.amazonaws.services.sqs'
           - All imports from packages starting with 'software.amazon.awssdk.services.sqs'
         - Add required Azure Service Bus imports

      Below are the APIs provided for your reference:

      Interface: AmazonSQS
        Package: com.amazonaws.services.sqs
        Methods:
          - sendMessage(String queueUrl, String messageBody)
            Description: Delivers a message to the specified queue.
            Parameters:
              - queueUrl: The URL of the Amazon SQS queue to which a message is sent
              - messageBody: The message to send
            Returns: SendMessageResult
          - sendMessage(SendMessageRequest request)
            Description: Delivers a message to the specified queue.
            Parameters:
              - request: Container for the necessary parameters to execute the SendMessage operation
            Returns: SendMessageResult
          - sendMessageBatch(String queueUrl, List<SendMessageBatchRequestEntry> entries)
            Description: Delivers up to ten messages to the specified queue.
            Parameters:
              - queueUrl: The URL of the Amazon SQS queue to which batched messages are sent
              - entries: A list of SendMessageBatchRequestEntry items
            Returns: SendMessageBatchResult
          - sendMessageBatch(SendMessageBatchRequest request)
            Description: Delivers up to ten messages to the specified queue.
            Parameters:
              - request: Container for the necessary parameters to execute the SendMessageBatch operation
            Returns: SendMessageBatchResult

      Class: SendMessageRequest
        Package: com.amazonaws.services.sqs.model
        Methods:
          - withQueueUrl(String queueUrl)
            Description: Sets the URL of the Amazon SQS queue to which a message is sent.
            Parameters:
              - queueUrl: Queue URL to send message to
            Returns: SendMessageRequest
          - withMessageBody(String messageBody)
            Description: Sets the message to send.
            Parameters:
              - messageBody: Message body content
            Returns: SendMessageRequest
          - withDelaySeconds(Integer delaySeconds)
            Description: Sets the length of time, in seconds, for which to delay a message.
            Parameters:
              - delaySeconds: Delay in seconds (0 to 900)
            Returns: SendMessageRequest
          - withMessageAttributes(Map<String, MessageAttributeValue> messageAttributes)
            Description: Sets the message attributes to include in the message.
            Parameters:
              - messageAttributes: Map of message attribute names to values
            Returns: SendMessageRequest

      Class: SendMessageBatchRequest
        Package: com.amazonaws.services.sqs.model
        Methods:
          - withQueueUrl(String queueUrl)
            Description: Sets the URL of the Amazon SQS queue to which batched messages are sent.
            Parameters:
              - queueUrl: Queue URL to send messages to
            Returns: SendMessageBatchRequest
          - withEntries(List<SendMessageBatchRequestEntry> entries)
            Description: Sets the list of SendMessageBatchRequestEntry items.
            Parameters:
              - entries: List of messages to send in batch
            Returns: SendMessageBatchRequest

      Class: SendMessageBatchRequestEntry
        Package: com.amazonaws.services.sqs.model
        Methods:
          - SendMessageBatchRequestEntry(String id, String messageBody)
            Description: Constructs a new SendMessageBatchRequestEntry with the specified ID and message body.
            Parameters:
              - id: An identifier for this particular message in the batch
              - messageBody: The message to send
          - withId(String id)
            Description: Sets the identifier for this message in the batch.
            Parameters:
              - id: Message identifier
            Returns: SendMessageBatchRequestEntry
          - withMessageBody(String messageBody)
            Description: Sets the message body.
            Parameters:
              - messageBody: Message content
            Returns: SendMessageBatchRequestEntry
          - withDelaySeconds(Integer delaySeconds)
            Description: Sets the delay for this message.
            Parameters:
              - delaySeconds: Delay in seconds
            Returns: SendMessageBatchRequestEntry

      Class: SqsClient (v2)
        Package: software.amazon.awssdk.services.sqs
        Methods:
          - sendMessage(SendMessageRequest request)
            Description: Delivers a message to the specified queue.
            Parameters:
              - request: Request object containing message details
            Returns: SendMessageResponse
          - sendMessageBatch(SendMessageBatchRequest request)
            Description: Delivers up to ten messages to the specified queue.
            Parameters:
              - request: Request object containing batch message details
            Returns: SendMessageBatchResponse

      Class: SendMessageRequest.Builder (v2)
        Package: software.amazon.awssdk.services.sqs
        Methods:
          - queueUrl(String queueUrl)
            Description: Sets the URL of the Amazon SQS queue to which a message is sent.
            Parameters:
              - queueUrl: Queue URL to send message to
            Returns: SendMessageRequest.Builder
          - messageBody(String messageBody)
            Description: Sets the message to send.
            Parameters:
              - messageBody: Message body content
            Returns: SendMessageRequest.Builder
          - delaySeconds(Integer delaySeconds)
            Description: Sets the length of time, in seconds, for which to delay a message.
            Parameters:
              - delaySeconds: Delay in seconds (0 to 900)
            Returns: SendMessageRequest.Builder
          - messageAttributes(Map<String, MessageAttributeValue> attributes)
            Description: Sets the message attributes.
            Parameters:
              - attributes: Map of message attribute names to values
            Returns: SendMessageRequest.Builder
          - build()
            Description: Builds the SendMessageRequest object.
            Returns: SendMessageRequest

      Class: ServiceBusSenderClient
        Package: com.azure.messaging.servicebus
        Methods:
          - sendMessage(ServiceBusMessage message)
            Description: Sends a message to the Azure Service Bus entity this sender is connected to.
            Parameters:
              - message: Message to be sent to Service Bus
            Returns: void
          - sendMessages(List<ServiceBusMessage> messages)
            Description: Sends a batch of messages to the Azure Service Bus entity this sender is connected to.
            Parameters:
              - messages: List of messages to be sent to Service Bus
            Returns: void
          - createMessageBatch()
            Description: Creates a ServiceBusMessageBatch that can fit as many messages as the transport allows.
            Returns: ServiceBusMessageBatch
          - sendMessageBatch(ServiceBusMessageBatch batch)
            Description: Sends a batch of messages to the Azure Service Bus entity this sender is connected to.
            Parameters:
              - batch: The batch of messages to send to Service Bus
            Returns: void

      Class: ServiceBusMessage
        Package: com.azure.messaging.servicebus
        Methods:
          - ServiceBusMessage(BinaryData body)
            Description: Creates a ServiceBusMessage with the given body.
            Parameters:
              - body: The content of the message
          - ServiceBusMessage(String body)
            Description: Creates a ServiceBusMessage with the given string body.
            Parameters:
              - body: String content of the message
          - setScheduledEnqueueTime(OffsetDateTime scheduledEnqueueTime)
            Description: Sets the scheduled enqueue time of this message.
            Parameters:
              - scheduledEnqueueTime: The time when the message should appear in the Service Bus queue
            Returns: void
          - getApplicationProperties()
            Description: Gets the application properties of this message.
            Returns: Map<String, Object>
          - setApplicationProperties(Map<String, Object> applicationProperties)
            Description: Sets the application properties of this message.
            Parameters:
              - applicationProperties: Application properties for the message
            Returns: void
          - setMessageId(String messageId)
            Description: Sets the message ID.
            Parameters:
              - messageId: ID of the message
            Returns: void
          - setSubject(String subject)
            Description: Sets the subject for the message (equivalent to SQS routing key).
            Parameters:
              - subject: The subject value
            Returns: void

      Remember to maintain the same functionality while replacing AWS SQS-specific code with Azure Service Bus code.
