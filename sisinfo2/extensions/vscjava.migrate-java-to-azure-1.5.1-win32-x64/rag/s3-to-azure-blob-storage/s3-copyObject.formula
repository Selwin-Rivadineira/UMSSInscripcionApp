name: 'Migrate S3client copyObject to Azure Blob Storage'
description: ""
codeLocation:
  type: textsearch
  filePattern: '**/*.java'
  codePattern: >-
    copyObject|CopyObjectRequest|CopyObjectResponse

steps:
  - description: "Migrate s3client with copyObject API to Azure Blob Storage BlobClient.beginCopy"
    type: "instruction"
    content: |
      Your task is to migrate a Java file from using the Amazon S3 API to the Azure Storage Blob API while maintaining the same functionality. Below is a reference to the relevant Azure Storage Blob APIs for your convenience. You can tell whether it's an aws or Azure API from the package name.
      Try replace all references to S3 APIs with equivalent Azure Storage Blob APIs, using the provided API descriptions as guidance.
      Ensure the resulting code is clean, efficient, and preserves the original functionality.
      Some of the methods are of the same name under different class, please pay attention to the type before using.
      Note:
        1. `The package of `BlobClient` is com.azure.storage.blob
      Below are the APIs provided for your reference, don't forget to import the package whenever you are adding a new class reference in code edit:

      Interface: S3Client
        Package: software.amazon.awssdk.services.s3
        Methods:
        - default CopyObjectResponse copyObject​(CopyObjectRequest copyObjectRequest) throws ObjectNotInActiveTierErrorException, AwsServiceException, SdkClientException, S3Exception
          Description: Creates a copy of an object that is already stored in Amazon S3. You can store individual objects of up to 5 TB in Amazon S3. You create a copy of your object up to 5 GB in size in a single atomic action using this API. However, to copy an object greater than 5 GB, you must use the multipart upload Upload Part - Copy (UploadPartCopy) API. For more information, see Copy Object Using the REST Multipart Upload API. You can copy individual objects between general purpose buckets, between directory buckets, and between general purpose buckets and directory buckets.
          Parameters:
          - copyObjectRequest:
          Returns: Result of the CopyObject operation returned by the service.

      Class: CopyObjectRequest
        Package: software.amazon.awssdk.services.s3.model
        Methods:
        - public final String destinationBucket()
          Description: The name of the destination bucket.
          Returns: The name of the destination bucket.
        - public final String sourceBucket()
          Description: The name of the bucket containing the object to copy. The provided input will be URL encoded. The sourceBucket, sourceKey, and sourceVersionId parameters must not be used in conjunction with the copySource parameter.
          Returns: The name of the bucket containing the object to copy. The provided input will be URL encoded. The sourceBucket, sourceKey, and sourceVersionId parameters must not be used in conjunction with the copySource parameter.

      Class: CopyObjectResponse
        Package: software.amazon.awssdk.services.s3.model
        Methods:
        - public final CopyObjectResult copyObjectResult()
          Description: Container for all response elements.
          Returns: Container for all response elements.

      Class: CopyObjectResult
        Package: software.amazon.awssdk.services.s3.model
        Description: Container for all response elements.
        Methods:
        - public final <T> Optional<T> getValueForField​(String fieldName, Class<T> clazz)

      Class BlobClient
        Package: com.azure.storage.blob
        Note: `The package of `BlobClient` is com.azure.storage.blob and the package of `BlobClientBase` is com.azure.storage.blob.specialized, don't make mistake here.
        Methods:
        - public SyncPoller beginCopy(BlobBeginCopyOptions options)
          Description: Copies the data at the source URL to a blob.
          This method triggers a long-running, asynchronous operations. The source may be another blob or an Azure File. If the source is in another account, the source must either be public or authenticated with a SAS token. If the source is in the same account, the Shared Key authorization on the destination will also be applied to the source. The source URL must be URL encoded.
          Parameters:
          - options: BlobBeginCopyOptions
          Returns: A SyncPoller<T,U> to poll the progress of blob copy operation.
        - public SyncPoller beginCopy(String sourceUrl, Duration pollInterval)
          Description: Copies the data at the source URL to a blob.This method triggers a long-running, asynchronous operations. The source may be another blob or an Azure File. If the source is in another account, the source must either be public or authenticated with a SAS token. If the source is in the same account, the Shared Key authorization on the destination will also be applied to the source. The source URL must be URL encoded.
          Parameters:
          - sourceUrl: The source URL to copy from. URLs outside of Azure may only be copied to block blobs.
          - pollInterval: Duration between each poll for the copy status. If none is specified, a default of one second is used.
          Returns: A SyncPoller<T,U> to poll the progress of blob copy operation.
