name: 'Migrate Ehcache Maven dependencies to Azure Cache for Redis'
description: "Replaces Ehcache Maven dependencies with Azure Cache for Redis dependencies"
codeLocation:
  type: textsearch
  filePattern: '**/*.xml'
  codePattern: >-
    <artifactId>ehcache</artifactId>|<groupId>net.sf.ehcache</groupId>|<artifactId>spring-boot-starter-cache</artifactId>|<artifactId>ehcache-core</artifactId>

steps:
  - description: "Migrate Ehcache Maven dependencies to Azure Cache for Redis dependencies"
    type: "instruction"
    content: |
      Your task is to migrate a pom.xml file from using Ehcache dependencies to Azure Cache for Redis dependencies. Follow these detailed instructions to make the transition:

      ## Identifying Ehcache Dependencies
      
      First, look for the following Ehcache-related dependencies in your pom.xml file:
      
      1. Standard Ehcache dependency with groupId 'net.sf.ehcache' and artifactId 'ehcache'
      2. Ehcache core dependency with groupId 'net.sf.ehcache' and artifactId 'ehcache-core'
      3. Spring Boot Cache starter combined with Ehcache
      4. Ehcache 3.x dependencies with groupId 'org.ehcache'
      
      ## Replacement Strategy
      
      Make the following replacements:
      
      1. For Spring applications:
         - Keep the spring-boot-starter-cache dependency if it exists
         - Remove all Ehcache-specific dependencies
         - Add spring-boot-starter-data-redis with version 3.5.3 (or match your Spring Boot version)
      
      2. For non-Spring applications:
         - Remove all Ehcache dependencies
         - Add Spring Data Redis dependencies (spring-data-redis and lettuce-core)
         - Add Jackson dependency for object serialization
         
      ## Dependencies to Add for Different Application Types
      
      ### For Spring Boot Applications:
      ```xml
      <!-- For Spring applications, keep spring-boot-starter-cache and add spring-boot-starter-data-redis -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-redis</artifactId>
        <version>3.5.3</version>
      </dependency>
      ```
      
      ### For non-Spring Applications:
      ```xml
      <!-- For non-Spring applications, use Spring Data Redis with Lettuce -->
      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-redis</artifactId>
        <version>3.5.1</version>
      </dependency>
      
      <dependency>
        <groupId>io.lettuce</groupId>
        <artifactId>lettuce-core</artifactId>
        <version>6.7.1.RELEASE</version>
      </dependency>
      
      <!-- For Jackson JSON serialization -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.19.1</version>
      </dependency>
      ```
      
      ## Implementation Considerations
      
      - Keep the Spring Boot Cache starter if it exists, as it provides the cache abstraction layer
      - Ensure the spring-boot-starter-data-redis includes Lettuce client as the default
      - Add Jackson dependency for JSON serialization of complex objects stored in Redis
      - If using Maven properties for versions, maintain that pattern with Redis dependencies
      - For existing version tags, preserve the style in the new Redis dependencies
      - Don't add additional Lettuce client dependencies if using spring-boot-starter-data-redis as they're included
      - If you have Ehcache-specific implementation classes referenced elsewhere, you'll need to update those classes too
      
      ## Maven Properties Handling
      
      If your project is using Maven properties for version management, integrate the new dependencies using the same approach:
      
      ```xml
      <!-- Example with Maven properties -->
      <properties>
          <spring-data-redis.version>3.5.1</spring-data-redis.version>
          <lettuce.version>6.7.1.RELEASE</lettuce.version>
          <jackson.version>2.19.1</jackson.version>
      </properties>
      
      <dependencies>
          <dependency>
              <groupId>org.springframework.data</groupId>
              <artifactId>spring-data-redis</artifactId>
              <version>${spring-data-redis.version}</version>
          </dependency>
      </dependencies>
      ```
