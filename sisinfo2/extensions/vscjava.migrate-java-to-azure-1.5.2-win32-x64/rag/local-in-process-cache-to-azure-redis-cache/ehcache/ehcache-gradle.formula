name: 'Migrate Ehcache Gradle dependencies to Azure Cache for Redis'
description: "Replaces Ehcache Gradle dependencies with Azure Cache for Redis dependencies"
codeLocation:
  type: textsearch
  filePattern: '**/{build.gradle,build.gradle.kts}'
  codePattern: >-
    net.sf.ehcache:ehcache|net.sf.ehcache:ehcache-core|org.springframework.boot:spring-boot-starter-cache|org.ehcache:ehcache

steps:
  - description: "Migrate Ehcache Gradle dependencies to Azure Cache for Redis dependencies"
    type: "instruction"
    content: |
      Your task is to migrate a Gradle build file (Groovy or Kotlin DSL) from using Ehcache dependencies to Azure Cache for Redis dependencies.
      Pay attention that you should only update the specific dependency declarations and keep the rest of the file - you cannot replace the whole file. What you return must be a valid, complete Gradle build file.

      Below are examples of dependencies to replace and their Azure Redis equivalents:

      Ehcache dependencies that should be removed or replaced in Groovy DSL:
      ```gradle
      // Standard Ehcache dependency
      implementation 'net.sf.ehcache:ehcache:2.10.6'
      
      // Or Ehcache core dependency
      implementation 'net.sf.ehcache:ehcache-core:2.6.11'
      
      // Ehcache 3 dependency
      implementation 'org.ehcache:ehcache:3.9.0'
      
      // Spring Cache with Ehcache
      implementation 'org.springframework.boot:spring-boot-starter-cache'
      implementation 'net.sf.ehcache:ehcache'
      ```

      Or in Kotlin DSL format:
      ```kotlin
      // Standard Ehcache dependency
      implementation("net.sf.ehcache:ehcache:2.10.6")
      
      // Or Ehcache core dependency
      implementation("net.sf.ehcache:ehcache-core:2.6.11")
      
      // Ehcache 3 dependency
      implementation("org.ehcache:ehcache:3.9.0")
      
      // Spring Cache with Ehcache
      implementation("org.springframework.boot:spring-boot-starter-cache")
      implementation("net.sf.ehcache:ehcache")
      ```

      Azure Cache for Redis dependencies to add in Groovy DSL:
      ```gradle
      // For Spring applications, keep spring-boot-starter-cache and add spring-boot-starter-data-redis
      implementation 'org.springframework.boot:spring-boot-starter-cache:3.5.3'
      implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.5.3'
      implementation("com.fasterxml.jackson.core:jackson-databind:2.19.1") // For JSON serialization
      
      // For non-Spring applications, use Lettuce directly
      implementation 'io.lettuce:lettuce-core:6.7.1.RELEASE'
      implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.1' // For JSON serialization
      ```

      Or in Kotlin DSL format:
      ```kotlin
      // For Spring applications, keep spring-boot-starter-cache and add spring-boot-starter-data-redis
      implementation("org.springframework.boot:spring-boot-starter-cache:3.5.3")
      implementation("org.springframework.boot:spring-boot-starter-data-redis:3.5.3")
      implementation("com.fasterxml.jackson.core:jackson-databind:2.19.1") // For JSON serialization
      
      // For non-Spring applications, use Lettuce directly
      implementation("io.lettuce:lettuce-core:6.7.1.RELEASE")
      implementation("com.fasterxml.jackson.core:jackson-databind:2.19.1") // For JSON serialization
      ```

      Implementation notes:
      1. Keep the Spring Boot Cache starter if it exists, as it provides the cache abstraction layer
      2. Remove all Ehcache-specific dependencies
      3. Add spring-boot-starter-data-redis which includes Lettuce as the default Redis client
      4. Always provide version numbers for dependencies (e.g., spring-boot-starter-data-redis:3.5.3)
      5. Detect whether the build file uses Groovy DSL or Kotlin DSL syntax and maintain that style
      6. If the project uses version catalogs or variables for versions, maintain that pattern
      7. Spring Boot Redis starter already includes Lettuce as the default Redis client, so no need for additional client dependencies
