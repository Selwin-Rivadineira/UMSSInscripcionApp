name: 'Migrate AWS SecretsManagerClient deleteSecret to Azure Key Vault beginDeleteSecret'
description: ""
codeLocation:
  type: textsearch
  filePattern: '**/*.java'
  codePattern: >-
    DeleteSecretRequest
steps:
  - description: "Migrate SecretsManagerClient with deleteSecret API to Azure Key Vault beginDeleteSecret and purgeDeletedSecret"
    type: "instruction"
    content: |
      Your task is to migrate a Java file from using the AWS SecretsManager API to the Azure Keyvault API while maintaining the same functionality. Below is a reference to the relevant Azure Keyvault APIs for your convenience. You can tell whether it's an aws or Azure API from the package name.
      Try replace all references to AWS SecretsManager APIs with equivalent Azure Keyvault APIs, using the provided API descriptions as guidance.
      Ensure the resulting code is clean, efficient, and preserves the original functionality.
      Some of the methods are of the same name under different class, please pay attention to the type before using.
      
      IMPORTANT: When AWS code uses forceDeleteWithoutRecovery=true, you should use both beginDeleteSecret followed by purgeDeletedSecret in Azure to permanently delete the secret without a recovery window. 
      
      Note on return values: 
      - AWS's deleteSecret returns a DeleteSecretResponse object
      - Azure's beginDeleteSecret returns a SyncPoller<DeletedSecret, Void> object
      - When handling forceDeleteWithoutRecovery=true, after calling beginDeleteSecret, you should call .poll() until it completes, and then call purgeDeletedSecret. If the AWS code uses the return value, return the DeletedSecret from the poller.
      
      Below are the APIs provided for your reference, don't forget to import the package whenever you are adding a new class reference in code edit:

      Interface: SecretsManagerClient
        Package: software.amazon.awssdk.services.secretsmanager
        Methods:
          - default DeleteSecretResponse deleteSecret(DeleteSecretRequest deleteSecretRequest) throws ResourceNotFoundException, InvalidParameterException, InvalidRequestException, InternalServiceErrorException, AwsServiceException, SdkClientException, SecretsManagerException
            Description: Deletes a secret and all of its versions. You can specify a recovery window during which you can restore the secret. The minimum recovery window is 7 days. The default recovery window is 30 days. Secrets Manager attaches a DeletionDate stamp to the secret that specifies the end of the recovery window. At the end of the recovery window, Secrets Manager deletes the secret permanently.
            Parameters:
            - deleteSecretRequest -
            Returns: Result of the DeleteSecret operation returned by the service.
          - default DeleteSecretResponse deleteSecret(Consumer<DeleteSecretRequest.Builder> deleteSecretRequest) throws ResourceNotFoundException, InvalidParameterException, InvalidRequestException, InternalServiceErrorException, AwsServiceException, SdkClientException, SecretsManagerException
            Description: Deletes a secret and all of its versions. You can specify a recovery window during which you can restore the secret.
            Parameters:
            - deleteSecretRequest - A Consumer that will call methods on DeleteSecretRequest.Builder to create a request.
            Returns: Result of the DeleteSecret operation returned by the service.

      Class: DeleteSecretRequest
        Package:software.amazon.awssdk.services.secretsmanager.model
        Methods:
          - public static DeleteSecretRequest.Builder builder()

      Interface: DeleteSecretRequest.Builder
        Methods:
          - DeleteSecretRequest.Builder secretId(String secretId)
            Description: The ARN or name of the secret to delete.
            Parameters:
            - secretId - The ARN or name of the secret to delete.
            Returns: Returns a reference to this object so that method calls can be chained together.
          - DeleteSecretRequest.Builder recoveryWindowInDays(Long recoveryWindowInDays)
            Description: The number of days from 7 to 30 that Secrets Manager waits before permanently deleting the secret. You can't use both this parameter and ForceDeleteWithoutRecovery in the same call. If you don't use either, then by default Secrets Manager uses a 30 day recovery window.
            Parameters:
            - recoveryWindowInDays - The number of days from 7 to 30 that Secrets Manager waits before permanently deleting the secret. You can't use both this parameter and ForceDeleteWithoutRecovery in the same call. If you don't use either, then by default Secrets Manager uses a 30 day recovery window.
            Returns: Returns a reference to this object so that method calls can be chained together.
          - DeleteSecretRequest.Builder forceDeleteWithoutRecovery(Boolean forceDeleteWithoutRecovery)
            Description: Specifies whether to delete the secret without any recovery window. You can't use both this parameter and RecoveryWindowInDays in the same call. If you don't use either, then by default Secrets Manager uses a 30 day recovery window.
            Parameters:
            - forceDeleteWithoutRecovery - Specifies whether to delete the secret without any recovery window. You can't use both this parameter and RecoveryWindowInDays in the same call. If you don't use either, then by default Secrets Manager uses a 30 day recovery window.
            Returns: Returns a reference to this object so that method calls can be chained together.

      Class SecretClient
        Package: com.azure.security.keyvault.secrets
        Methods:
          - public SyncPoller<DeletedSecret, Void> beginDeleteSecret(String name)
            Description: Deletes a secret from the key vault. If soft-delete is enabled on the key vault then the secret is placed in the deleted state and for permanent deletion, needs to be purged. Otherwise, the secret is permanently deleted. All versions of a secret are deleted. This cannot be applied to individual versions of a secret. This operation requires the secrets/delete permission.
            Parameters:
            - name - The name of the secret to be deleted.
            Returns: A SyncPoller<DeletedSecret, Void> to poll on and retrieve the DeletedSecret.
          - public void purgeDeletedSecret(String name)
            Description: Permanently deletes a secret that has been previously deleted and retained for soft-deletion. This operation requires the secrets/purge permission.
            Parameters:
            - name - The name of the secret.
