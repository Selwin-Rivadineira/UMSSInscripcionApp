import { z } from 'zod';
export declare const reportStatusSchema: z.ZodObject<{
    status: z.ZodEnum<["success", "fail", "unknown"]>;
    error: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    status: "unknown" | "success" | "fail";
    error?: string | undefined;
}, {
    status: "unknown" | "success" | "fail";
    error?: string | undefined;
}>;
export declare const consistencyCheckResultSchema: z.ZodObject<{
    critical: z.ZodNumber;
    major: z.ZodNumber;
    minor: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    critical: number;
    major: number;
    minor: number;
}, {
    critical: number;
    major: number;
    minor: number;
}>;
export declare const versionControlSummarySchema: z.ZodObject<{
    versionControlSystem: z.ZodString;
    branchName: z.ZodOptional<z.ZodString>;
    commitCount: z.ZodNumber;
    hasUncommittedChanges: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    versionControlSystem: string;
    commitCount: number;
    hasUncommittedChanges: boolean;
    branchName?: string | undefined;
}, {
    versionControlSystem: string;
    commitCount: number;
    hasUncommittedChanges: boolean;
    branchName?: string | undefined;
}>;
export declare const completenessCheckResultSchema: z.ZodObject<{
    issuesFound: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    issuesFound: number;
}, {
    issuesFound: number;
}>;
export declare const migrationStatusSchema: z.ZodObject<{
    buildFixStatus: z.ZodObject<{
        status: z.ZodEnum<["success", "fail", "unknown"]>;
        error: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
    }, {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
    }>;
    testFixStatus: z.ZodObject<{
        status: z.ZodEnum<["success", "fail", "unknown"]>;
        error: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
    }, {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
    }>;
    cveFixStatus: z.ZodObject<{
        status: z.ZodEnum<["success", "fail", "unknown"]>;
        error: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
    }, {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
    }>;
    consistencyCheckStatus: z.ZodObject<{
        result: z.ZodOptional<z.ZodObject<{
            critical: z.ZodNumber;
            major: z.ZodNumber;
            minor: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            critical: number;
            major: number;
            minor: number;
        }, {
            critical: number;
            major: number;
            minor: number;
        }>>;
        status: z.ZodEnum<["success", "fail", "unknown"]>;
        error: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
        result?: {
            critical: number;
            major: number;
            minor: number;
        } | undefined;
    }, {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
        result?: {
            critical: number;
            major: number;
            minor: number;
        } | undefined;
    }>;
    completenessCheckStatus: z.ZodObject<{
        result: z.ZodOptional<z.ZodObject<{
            issuesFound: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            issuesFound: number;
        }, {
            issuesFound: number;
        }>>;
        status: z.ZodEnum<["success", "fail", "unknown"]>;
        error: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
        result?: {
            issuesFound: number;
        } | undefined;
    }, {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
        result?: {
            issuesFound: number;
        } | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    buildFixStatus: {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
    };
    testFixStatus: {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
    };
    cveFixStatus: {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
    };
    consistencyCheckStatus: {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
        result?: {
            critical: number;
            major: number;
            minor: number;
        } | undefined;
    };
    completenessCheckStatus: {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
        result?: {
            issuesFound: number;
        } | undefined;
    };
}, {
    buildFixStatus: {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
    };
    testFixStatus: {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
    };
    cveFixStatus: {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
    };
    consistencyCheckStatus: {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
        result?: {
            critical: number;
            major: number;
            minor: number;
        } | undefined;
    };
    completenessCheckStatus: {
        status: "unknown" | "success" | "fail";
        error?: string | undefined;
        result?: {
            issuesFound: number;
        } | undefined;
    };
}>;
export declare const migrationSummarySchema: z.ZodObject<{
    sessionId: z.ZodString;
} & {
    kbIds: z.ZodArray<z.ZodString, "many">;
    workspacePath: z.ZodString;
    status: z.ZodObject<{
        buildFixStatus: z.ZodObject<{
            status: z.ZodEnum<["success", "fail", "unknown"]>;
            error: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        }, {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        }>;
        testFixStatus: z.ZodObject<{
            status: z.ZodEnum<["success", "fail", "unknown"]>;
            error: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        }, {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        }>;
        cveFixStatus: z.ZodObject<{
            status: z.ZodEnum<["success", "fail", "unknown"]>;
            error: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        }, {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        }>;
        consistencyCheckStatus: z.ZodObject<{
            result: z.ZodOptional<z.ZodObject<{
                critical: z.ZodNumber;
                major: z.ZodNumber;
                minor: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                critical: number;
                major: number;
                minor: number;
            }, {
                critical: number;
                major: number;
                minor: number;
            }>>;
            status: z.ZodEnum<["success", "fail", "unknown"]>;
            error: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
            result?: {
                critical: number;
                major: number;
                minor: number;
            } | undefined;
        }, {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
            result?: {
                critical: number;
                major: number;
                minor: number;
            } | undefined;
        }>;
        completenessCheckStatus: z.ZodObject<{
            result: z.ZodOptional<z.ZodObject<{
                issuesFound: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                issuesFound: number;
            }, {
                issuesFound: number;
            }>>;
            status: z.ZodEnum<["success", "fail", "unknown"]>;
            error: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
            result?: {
                issuesFound: number;
            } | undefined;
        }, {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
            result?: {
                issuesFound: number;
            } | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        buildFixStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        };
        testFixStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        };
        cveFixStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        };
        consistencyCheckStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
            result?: {
                critical: number;
                major: number;
                minor: number;
            } | undefined;
        };
        completenessCheckStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
            result?: {
                issuesFound: number;
            } | undefined;
        };
    }, {
        buildFixStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        };
        testFixStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        };
        cveFixStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        };
        consistencyCheckStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
            result?: {
                critical: number;
                major: number;
                minor: number;
            } | undefined;
        };
        completenessCheckStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
            result?: {
                issuesFound: number;
            } | undefined;
        };
    }>;
    versionControlSummary: z.ZodObject<{
        versionControlSystem: z.ZodString;
        branchName: z.ZodOptional<z.ZodString>;
        commitCount: z.ZodNumber;
        hasUncommittedChanges: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        versionControlSystem: string;
        commitCount: number;
        hasUncommittedChanges: boolean;
        branchName?: string | undefined;
    }, {
        versionControlSystem: string;
        commitCount: number;
        hasUncommittedChanges: boolean;
        branchName?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    status: {
        buildFixStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        };
        testFixStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        };
        cveFixStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        };
        consistencyCheckStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
            result?: {
                critical: number;
                major: number;
                minor: number;
            } | undefined;
        };
        completenessCheckStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
            result?: {
                issuesFound: number;
            } | undefined;
        };
    };
    sessionId: string;
    workspacePath: string;
    kbIds: string[];
    versionControlSummary: {
        versionControlSystem: string;
        commitCount: number;
        hasUncommittedChanges: boolean;
        branchName?: string | undefined;
    };
}, {
    status: {
        buildFixStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        };
        testFixStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        };
        cveFixStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
        };
        consistencyCheckStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
            result?: {
                critical: number;
                major: number;
                minor: number;
            } | undefined;
        };
        completenessCheckStatus: {
            status: "unknown" | "success" | "fail";
            error?: string | undefined;
            result?: {
                issuesFound: number;
            } | undefined;
        };
    };
    sessionId: string;
    workspacePath: string;
    kbIds: string[];
    versionControlSummary: {
        versionControlSystem: string;
        commitCount: number;
        hasUncommittedChanges: boolean;
        branchName?: string | undefined;
    };
}>;
export type MigrationStatus = z.infer<typeof migrationStatusSchema>;
export type VersionControlSummary = z.infer<typeof versionControlSummarySchema>;
export type MigrationSummaryRequest = z.infer<typeof migrationSummarySchema>;
//# sourceMappingURL=MigrationSummaryRequest.d.ts.map