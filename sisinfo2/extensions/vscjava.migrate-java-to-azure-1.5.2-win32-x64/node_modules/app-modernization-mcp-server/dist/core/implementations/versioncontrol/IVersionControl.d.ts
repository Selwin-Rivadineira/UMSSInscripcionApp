import { McpContext } from '../../../types';
import { VersionControlRequest } from '../../request/VersionControlRequest';
import { ToolResponse } from '../../Tool';
/**
 * Interface for version control operations
 */
export interface IVersionControl {
    /**
     * Get the type of version control system
     */
    getType(): string;
    /**
     * Check if version control is available in the workspace
     * @param workspacePath The workspace path
     */
    isAvailable(workspacePath: string): Promise<boolean>;
    /**
     * Check the status of the repository
     * @param workspacePath The workspace path
     */
    checkStatus(workspacePath: string): Promise<ToolResponse>;
    /**
     * Create a new branch
     * @param workspacePath The workspace path
     * @param branchName The name of the branch to create
     */
    createBranch(workspacePath: string, branchName: string): Promise<ToolResponse>;
    /**
     * Commit changes
     * @param workspacePath The workspace path
     * @param commitMessage The commit message
     * @param context Optional MCP context for telemetry
     */
    commitChanges(workspacePath: string, commitMessage: string, context?: McpContext): Promise<ToolResponse>;
    /**
     * Stash changes
     * @param workspacePath The workspace path
     * @param stashMessage The stash message (optional)
     */
    stashChanges(workspacePath: string, stashMessage?: string): Promise<ToolResponse>;
    /**
     * Discard changes
     * @param workspacePath The workspace path
     */
    discardChanges(workspacePath: string): Promise<ToolResponse>;
    /**
     * Check for uncommitted changes
     * @param workspacePath The workspace path
     */
    checkForUncommittedChanges(workspacePath: string): Promise<ToolResponse>;
    /**
     * Execute a version control operation based on the request
     * @param request The version control request
     * @param context Optional MCP context for telemetry
     */
    execute(request: VersionControlRequest, context?: McpContext): Promise<ToolResponse>;
}
//# sourceMappingURL=IVersionControl.d.ts.map