import { ILogger } from './common/types';
import { Environment } from './context/Environment';
import { IJavaProjDeps } from './dependency/JavaDependency';
import { setCmdInfo } from './IBuildTool';
import { JavaBuildTool } from './JavaBuildTool';
import { IBuildResult, TTestResult } from './test/types';
import { mvnCmd } from './utils/maven';
export declare class MavenBuildTool extends JavaBuildTool {
    private mvn;
    protected env: Environment;
    private cmdInfo?;
    private logger?;
    private signal?;
    constructor(mvn: mvnCmd | undefined, repoPath: string, env?: Environment, cmdInfo?: setCmdInfo, logger?: ILogger | undefined, signal?: AbortSignal | undefined);
    getDirectDependencies(): Promise<{
        parsed: IJavaProjDeps;
        raw: string;
    }>;
    compile(): Promise<IBuildResult>;
    test(): Promise<TTestResult>;
}
//# sourceMappingURL=MavenBuildTool.d.ts.map