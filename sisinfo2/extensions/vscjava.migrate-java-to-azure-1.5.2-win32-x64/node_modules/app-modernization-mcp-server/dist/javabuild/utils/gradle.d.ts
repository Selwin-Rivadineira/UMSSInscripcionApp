import { IRunOptions } from '../common/shell';
import { ILogger } from '../common/types';
import { Environment } from '../context/Environment';
import { IJavaProjDeps } from '../dependency/JavaDependency';
import { setCmdInfo } from '../IBuildTool';
import { IBuildResult } from '../test/types';
export type gradleCmd = 'gradle' | 'gradlew';
export declare function gradleVersion(directory: string, gradle?: gradleCmd, logger?: ILogger, env?: Environment): Promise<string>;
export declare function gradleDirectDependencies(repoPath: string, gradle?: gradleCmd, env?: Environment, logger?: ILogger): Promise<{
    parsed: IJavaProjDeps;
    raw: string;
}>;
export declare function runGradleCmd(repoPath: string, gradle: gradleCmd | undefined, args: string[], env?: Environment | undefined, logger?: ILogger | undefined, cmdInfo?: setCmdInfo, runOptions?: IRunOptions): Promise<string>;
export declare function parseGradleOutput(repoPath: string, output: string): Promise<IBuildResult>;
//# sourceMappingURL=gradle.d.ts.map