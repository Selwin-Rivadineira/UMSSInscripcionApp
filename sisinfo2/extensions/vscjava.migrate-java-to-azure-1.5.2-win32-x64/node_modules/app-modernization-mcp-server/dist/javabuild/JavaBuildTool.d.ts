import { Environment } from './context/Environment';
import { IJavaProjDeps } from './dependency/JavaDependency';
import { IDependency } from './dependency/types';
import { IBuildTool } from './IBuildTool';
import { IBuildResult, TTestResult } from './test/types';
export declare abstract class JavaBuildTool implements IBuildTool {
    protected repoPath: string;
    protected readonly env?: Environment | undefined;
    constructor(repoPath: string, env?: Environment | undefined);
    getDependencies(): Promise<IDependency[]>;
    abstract getDirectDependencies(): Promise<{
        parsed: IJavaProjDeps;
        raw: string;
    }>;
    abstract compile(): Promise<IBuildResult>;
    abstract test(): Promise<TTestResult>;
}
//# sourceMappingURL=JavaBuildTool.d.ts.map