{"version":3,"file":"vscode-label.js","sourceRoot":"","sources":["../../src/vscode-label/vscode-label.ts"],"names":[],"mappings":"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","sourcesContent":["import {html, TemplateResult} from 'lit';\nimport {property} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport uniqueId from '../includes/uniqueId.js';\nimport {customElement, VscElement} from '../includes/VscElement.js';\nimport {VscodeCheckboxGroup} from '../vscode-checkbox-group/index.js';\nimport {VscodeRadioGroup} from '../vscode-radio-group/index.js';\nimport {VscodeTextarea} from '../vscode-textarea/index.js';\nimport {VscodeTextfield} from '../vscode-textfield/index.js';\nimport styles from './vscode-label.styles.js';\n\ninterface FocusableElement extends Element {\n  focus: () => void;\n}\n\n/**\n * @tag vscode-label\n *\n * @cssprop [--vscode-font-family=sans-serif]\n * @cssprop [--vscode-font-size=13px]\n * @cssprop [--vscode-foreground=#cccccc]\n */\n@customElement('vscode-label')\nexport class VscodeLabel extends VscElement {\n  static override styles = styles;\n\n  @property({reflect: true, attribute: 'for'})\n  set htmlFor(val: string) {\n    this._htmlFor = val;\n    this.setAttribute('for', val);\n\n    if (this._connected) {\n      this._connectWithTarget();\n    }\n  }\n\n  get htmlFor(): string {\n    return this._htmlFor;\n  }\n\n  @property()\n  override set id(val: string) {\n    this._id = val;\n  }\n\n  override get id(): string {\n    return this._id;\n  }\n\n  @property({type: Boolean, reflect: true})\n  required = false;\n\n  override attributeChangedCallback(\n    name: string,\n    old: string | null,\n    value: string\n  ): void {\n    super.attributeChangedCallback(name, old, value);\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    this._connected = true;\n\n    if (this._id === '') {\n      this._id = uniqueId('vscode-label-');\n      this.setAttribute('id', this._id);\n    }\n\n    this._connectWithTarget();\n  }\n\n  private _id = '';\n\n  private _htmlFor = '';\n\n  private _connected = false;\n\n  private _getTarget() {\n    let target: HTMLElement | null = null;\n\n    if (this._htmlFor) {\n      const root = this.getRootNode({composed: false}) as Document | ShadowRoot;\n\n      if (root) {\n        target = root.querySelector(`#${this._htmlFor}`);\n      }\n    }\n\n    return target;\n  }\n\n  private async _connectWithTarget() {\n    await this.updateComplete;\n\n    const target = this._getTarget();\n\n    if (\n      target instanceof VscodeRadioGroup ||\n      target instanceof VscodeCheckboxGroup\n    ) {\n      target.setAttribute('aria-labelledby', this._id);\n    }\n\n    let label = '';\n\n    if (this.textContent) {\n      label = this.textContent.trim();\n    }\n\n    if (target instanceof VscodeTextfield || target instanceof VscodeTextarea) {\n      target.label = label;\n    }\n  }\n\n  private _handleClick() {\n    const target = this._getTarget();\n\n    if (target && 'focus' in target) {\n      (target as FocusableElement).focus();\n    }\n  }\n\n  override render(): TemplateResult {\n    return html`\n      <label\n        class=${classMap({wrapper: true, required: this.required})}\n        @click=${this._handleClick}\n        ><slot></slot\n      ></label>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'vscode-label': VscodeLabel;\n  }\n}\n"]}