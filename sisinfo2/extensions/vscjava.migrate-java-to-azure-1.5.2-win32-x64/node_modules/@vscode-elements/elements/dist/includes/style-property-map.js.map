{"version":3,"file":"style-property-map.js","sourceRoot":"","sources":["../../src/includes/style-property-map.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAe,MAAM,KAAK,CAAC;AAC3C,OAAO,EAAC,SAAS,EAAE,SAAS,EAAY,QAAQ,EAAC,MAAM,kBAAkB,CAAC;AAE1E,MAAM,gBAAiB,SAAQ,SAAS;IAGtC,YAAY,QAAkB;QAC5B,KAAK,CAAC,QAAQ,CAAC,CAAC;QAHV,oBAAe,GAA4B,EAAE,CAAC;QAKpD,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;YACrE,MAAM,IAAI,KAAK,CACb,uEAAuE,CACxE,CAAC;QACJ,CAAC;IACH,CAAC;IAEQ,MAAM,CACb,IAAkB,EAClB,CAAC,UAAU,CAA4B;QAEvC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE;YAChD,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;gBACtC,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;oBACzB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAC3C,CAAC;qBAAM,CAAC;oBACN,uEAAuE;oBACvE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;gBAChC,CAAC;gBAED,IAAI,CAAC,eAAe,CAAC,GAAa,CAAC,GAAG,GAAG,CAAC;YAC5C,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,WAAmE;QACxE,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;AAED;;;;;GAKG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAAG,SAAS,CAAC,gBAAgB,CAAC,CAAC","sourcesContent":["import {noChange, PropertyPart} from 'lit';\nimport {Directive, directive, PartInfo, PartType} from 'lit/directive.js';\n\nclass StylePropertyMap extends Directive {\n  private _prevProperties: {[key: string]: string} = {};\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n\n    if (partInfo.type !== PartType.PROPERTY || partInfo.name !== 'style') {\n      throw new Error(\n        'The `stylePropertyMap` directive must be used in the `style` property'\n      );\n    }\n  }\n\n  override update(\n    part: PropertyPart,\n    [styleProps]: [{[key: string]: string}]\n  ): unknown {\n    Object.entries(styleProps).forEach(([key, val]) => {\n      if (this._prevProperties[key] !== val) {\n        if (key.startsWith('--')) {\n          part.element.style.setProperty(key, val);\n        } else {\n          // @ts-expect-error I'm so sick of these stupid unresolvable TS errors.\n          part.element.style[key] = val;\n        }\n\n        this._prevProperties[key as string] = val;\n      }\n    });\n\n    return noChange;\n  }\n\n  render(_styleProps: Partial<CSSStyleDeclaration | {[key: string]: string}>) {\n    return noChange;\n  }\n}\n\n/**\n * Implement a Lit directive similar to styleMap, but instead of setting styles via the style\n * attribute (which violates CSP), it should apply styles using the style property.\n *\n * [MDN Reference](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline)\n */\nexport const stylePropertyMap = directive(StylePropertyMap);\n"]}