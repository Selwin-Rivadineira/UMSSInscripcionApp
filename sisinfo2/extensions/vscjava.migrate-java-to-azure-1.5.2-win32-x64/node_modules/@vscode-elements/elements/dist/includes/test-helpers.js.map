{"version":3,"file":"test-helpers.js","sourceRoot":"","sources":["../../src/includes/test-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Borrowed from Shoelace\n\nimport {sendMouse} from '@web/test-runner-commands';\n\nfunction determineMousePosition(\n  el: Element,\n  position: string,\n  offsetX: number,\n  offsetY: number\n) {\n  const {x, y, width, height} = el.getBoundingClientRect();\n  const centerX = Math.floor(x + window.scrollX + width / 2);\n  const centerY = Math.floor(y + window.scrollY + height / 2);\n  let clickX: number;\n  let clickY: number;\n\n  switch (position) {\n    case 'top':\n      clickX = centerX;\n      clickY = y;\n      break;\n    case 'right':\n      clickX = x + width - 1;\n      clickY = centerY;\n      break;\n    case 'bottom':\n      clickX = centerX;\n      clickY = y + height - 1;\n      break;\n    case 'left':\n      clickX = x;\n      clickY = centerY;\n      break;\n    default:\n      clickX = centerX;\n      clickY = centerY;\n  }\n\n  clickX += offsetX;\n  clickY += offsetY;\n  return {clickX, clickY};\n}\n\n/** A testing utility that measures an element's position and clicks on it. */\nexport async function clickOnElement(\n  /** The element to click */\n  el: Element,\n  /** The location of the element to click */\n  position: 'top' | 'right' | 'bottom' | 'left' | 'center' = 'center',\n  /** The horizontal offset to apply to the position when clicking */\n  offsetX = 0,\n  /** The vertical offset to apply to the position when clicking */\n  offsetY = 0\n) {\n  const {clickX, clickY} = determineMousePosition(\n    el,\n    position,\n    offsetX,\n    offsetY\n  );\n\n  await sendMouse({type: 'click', position: [clickX, clickY]});\n}\n\n/** A testing utility that moves the mouse onto an element. */\nexport async function moveMouseOnElement(\n  /** The element to click */\n  el: Element,\n  /** The location of the element to click */\n  position: 'top' | 'right' | 'bottom' | 'left' | 'center' = 'center',\n  /** The horizontal offset to apply to the position when clicking */\n  offsetX = 0,\n  /** The vertical offset to apply to the position when clicking */\n  offsetY = 0\n) {\n  const {clickX, clickY} = determineMousePosition(\n    el,\n    position,\n    offsetX,\n    offsetY\n  );\n\n  await sendMouse({type: 'move', position: [clickX, clickY]});\n}\n\n/** A testing utility that drags an element with the mouse. */\nexport async function dragElement(\n  /** The element to drag */\n  el: Element,\n  /** The horizontal distance to drag in pixels */\n  deltaX = 0,\n  /** The vertical distance to drag in pixels */\n  deltaY = 0,\n  callbacks: {\n    afterMouseDown?: () => void | Promise<void>;\n    afterMouseMove?: () => void | Promise<void>;\n  } = {}\n): Promise<void> {\n  await moveMouseOnElement(el);\n  await sendMouse({type: 'down'});\n\n  await callbacks.afterMouseDown?.();\n\n  const {clickX, clickY} = determineMousePosition(el, 'center', deltaX, deltaY);\n  await sendMouse({type: 'move', position: [clickX, clickY]});\n\n  await callbacks.afterMouseMove?.();\n\n  await sendMouse({type: 'up'});\n}\n"]}