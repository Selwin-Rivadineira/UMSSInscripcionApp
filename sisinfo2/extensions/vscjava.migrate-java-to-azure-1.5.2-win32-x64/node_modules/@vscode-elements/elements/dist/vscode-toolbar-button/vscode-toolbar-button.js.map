{"version":3,"file":"vscode-toolbar-button.js","sourceRoot":"","sources":["../../src/vscode-toolbar-button/vscode-toolbar-button.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,IAAI,EAAE,OAAO,EAAiB,MAAM,KAAK,CAAC;AAClD,OAAO,EAAC,QAAQ,EAAE,kBAAkB,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AACtE,OAAO,EAAC,aAAa,EAAE,UAAU,EAAC,MAAM,2BAA2B,CAAC;AACpE,OAAO,+BAA+B,CAAC;AACvC,OAAO,MAAM,MAAM,mCAAmC,CAAC;AACvD,OAAO,EAAC,QAAQ,EAAC,MAAM,6BAA6B,CAAC;AACrD,OAAO,EAAC,SAAS,EAAC,MAAM,8BAA8B,CAAC;AAEvD;;;;GAIG;AAEI,IAAM,mBAAmB,GAAzB,MAAM,mBAAoB,SAAQ,UAAU;IAA5C;;QAIL,SAAI,GAAG,EAAE,CAAC;QAGV,UAAK,GAAuB,SAAS,CAAC;QAGtC,eAAU,GAAG,KAAK,CAAC;QAGnB,YAAO,GAAG,KAAK,CAAC;QAGR,iBAAY,GAAG,IAAI,CAAC;IAyC9B,CAAC;IApCS,iBAAiB;QACvB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAChE,CAAC;IAEO,kBAAkB;QACxB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YACrB,OAAO;QACT,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QAE7B,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1C,CAAC;IAEQ,MAAM;QACb,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;QAEhD,OAAO,IAAI,CAAA;;;qBAGM,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;eAC3B,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;uBACzC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC;gBACvD,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,EAAC,CAAC;iBACnD,IAAI,CAAC,kBAAkB;;UAE9B,IAAI,CAAC,IAAI;YACT,CAAC,CAAC,IAAI,CAAA,qBAAqB,IAAI,CAAC,IAAI,iBAAiB;YACrD,CAAC,CAAC,OAAO;;wBAEK,IAAI,CAAC,iBAAiB;kBAC5B,QAAQ,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC;;;KAGvE,CAAC;IACJ,CAAC;;AAvDe,0BAAM,GAAG,MAAM,AAAT,CAAU;AAGhC;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;iDAChB;AAGV;IADC,QAAQ,EAAE;kDAC2B;AAGtC;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;uDACtB;AAGnB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;oDACzB;AAGR;IADP,KAAK,EAAE;yDACoB;AAGpB;IADP,kBAAkB,EAAE;2DACoB;AAnB9B,mBAAmB;IAD/B,aAAa,CAAC,uBAAuB,CAAC;GAC1B,mBAAmB,CAyD/B","sourcesContent":["import {html, nothing, TemplateResult} from 'lit';\nimport {property, queryAssignedNodes, state} from 'lit/decorators.js';\nimport {customElement, VscElement} from '../includes/VscElement.js';\nimport '../vscode-icon/vscode-icon.js';\nimport styles from './vscode-toolbar-button.styles.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\n\n/**\n * Toolbar button\n *\n * @tag vscode-toolbar-button\n */\n@customElement('vscode-toolbar-button')\nexport class VscodeToolbarButton extends VscElement {\n  static override styles = styles;\n\n  @property({reflect: true})\n  icon = '';\n\n  @property()\n  label: string | undefined = undefined;\n\n  @property({type: Boolean, reflect: true})\n  toggleable = false;\n\n  @property({type: Boolean, reflect: true})\n  checked = false;\n\n  @state()\n  private _isSlotEmpty = true;\n\n  @queryAssignedNodes()\n  private _assignedNodes!: NodeList | null;\n\n  private _handleSlotChange() {\n    this._isSlotEmpty = !((this._assignedNodes?.length ?? 0) > 0);\n  }\n\n  private _handleButtonClick() {\n    if (!this.toggleable) {\n      return;\n    }\n\n    this.checked = !this.checked;\n\n    this.dispatchEvent(new Event('change'));\n  }\n\n  override render(): TemplateResult {\n    const checked = this.checked ? 'true' : 'false';\n\n    return html`\n      <button\n        type=\"button\"\n        aria-label=${ifDefined(this.label)}\n        role=${ifDefined(this.toggleable ? 'switch' : undefined)}\n        aria-checked=${ifDefined(this.toggleable ? checked : undefined)}\n        class=${classMap({checked: this.toggleable && this.checked})}\n        @click=${this._handleButtonClick}\n      >\n        ${this.icon\n          ? html`<vscode-icon name=${this.icon}></vscode-icon>`\n          : nothing}\n        <slot\n          @slotchange=${this._handleSlotChange}\n          class=${classMap({empty: this._isSlotEmpty, textOnly: !this.icon})}\n        ></slot>\n      </button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'vscode-toolbar-button': VscodeToolbarButton;\n  }\n}\n"]}